{
    "pipes": [],
    "interfaces": [
        {
            "name": "ICheckboxAdditional",
            "id": "interface-ICheckboxAdditional-f4f4fb7694b6b9863eeb5322fb355da465c1a1c790b03289db9f78fce8ca26933dff4e2b3631f9d6b2f878e021635317eb020c01137dc95bab91b7ed73e3101a",
            "file": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../interfaces/app-form.interface';\nimport { FileUploadType } from '../types/file-upload.type';\nimport { InputType } from '../types/input.type';\nimport { ModelControlType } from '../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField {\n  name: string;\n  label: string;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n\nexport interface IFormGeneratorConfig {\n  fields: IFormGeneratorField[][];\n}\n\nexport interface IFormGeneratorFields {\n  fields: IFormGeneratorField[][];\n}\n",
            "properties": [
                {
                    "name": "isToggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IDatePickerAdditional",
            "id": "interface-IDatePickerAdditional-f4f4fb7694b6b9863eeb5322fb355da465c1a1c790b03289db9f78fce8ca26933dff4e2b3631f9d6b2f878e021635317eb020c01137dc95bab91b7ed73e3101a",
            "file": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../interfaces/app-form.interface';\nimport { FileUploadType } from '../types/file-upload.type';\nimport { InputType } from '../types/input.type';\nimport { ModelControlType } from '../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField {\n  name: string;\n  label: string;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n\nexport interface IFormGeneratorConfig {\n  fields: IFormGeneratorField[][];\n}\n\nexport interface IFormGeneratorFields {\n  fields: IFormGeneratorField[][];\n}\n",
            "properties": [
                {
                    "name": "isDatepickerRange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IFileUploadAdditional",
            "id": "interface-IFileUploadAdditional-f4f4fb7694b6b9863eeb5322fb355da465c1a1c790b03289db9f78fce8ca26933dff4e2b3631f9d6b2f878e021635317eb020c01137dc95bab91b7ed73e3101a",
            "file": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../interfaces/app-form.interface';\nimport { FileUploadType } from '../types/file-upload.type';\nimport { InputType } from '../types/input.type';\nimport { ModelControlType } from '../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField {\n  name: string;\n  label: string;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n\nexport interface IFormGeneratorConfig {\n  fields: IFormGeneratorField[][];\n}\n\nexport interface IFormGeneratorFields {\n  fields: IFormGeneratorField[][];\n}\n",
            "properties": [
                {
                    "name": "fileTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FileUploadType[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "limitErrorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "maxFiles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IFormGeneratorConfig",
            "id": "interface-IFormGeneratorConfig-f4f4fb7694b6b9863eeb5322fb355da465c1a1c790b03289db9f78fce8ca26933dff4e2b3631f9d6b2f878e021635317eb020c01137dc95bab91b7ed73e3101a",
            "file": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../interfaces/app-form.interface';\nimport { FileUploadType } from '../types/file-upload.type';\nimport { InputType } from '../types/input.type';\nimport { ModelControlType } from '../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField {\n  name: string;\n  label: string;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n\nexport interface IFormGeneratorConfig {\n  fields: IFormGeneratorField[][];\n}\n\nexport interface IFormGeneratorFields {\n  fields: IFormGeneratorField[][];\n}\n",
            "properties": [
                {
                    "name": "fields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFormGeneratorField[][]",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IFormGeneratorExample",
            "id": "interface-IFormGeneratorExample-01ae622be31497fa2908318cad80fff48025798986d2f66710e315a7375705095bc994aee4ddee67a7c4c6c7f75177b78813c987d6b7f4980436a28f3696d821",
            "file": "src/app/modules/initial/pages/components/components.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { RouterModule } from '@angular/router';\n\nimport { JsonPipe } from '@angular/common';\nimport { FormsModule, Validators } from '@angular/forms';\nimport { AppFormGeneratorComponent } from '../../../@core/_form-generator/app-form-generator/app-form-generator.component';\nimport { FormGeneratorService } from '../../../@core/_form-generator/form-generator.service';\nimport { IFormOption } from '../../../@core/interfaces/app-form.interface';\nimport { DatePickerRangeValue } from '../../../@core/types/datepicker.type';\nimport { FormExampleComponent } from '../../components/form-example/form-example.component';\nimport { TerminalWindowComponent } from '../../components/terminal-window/terminal-window.component';\n\nimport { AppThemeSelectionComponent } from '../../../@core/components/app-theme-selection/app-theme-selection.component';\nimport { AppCheckboxComponent } from '../../../@core/components/form/app-checkbox/app-checkbox.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-components',\n  styleUrl: './components.component.scss',\n  templateUrl: './components.component.html',\n  imports: [\n    JsonPipe,\n    FormsModule,\n    RouterModule,\n    MatTabsModule,\n    AppCheckboxComponent,\n    FormExampleComponent,\n    TerminalWindowComponent,\n    AppFormGeneratorComponent,\n    AppThemeSelectionComponent,\n  ],\n})\nexport class ComponentsComponent {\n  public defaultOptions: IFormOption[] = [\n    { label: 'Option 1', value: 1 },\n    { label: 'Option 2', value: 2 },\n    { label: 'Option 3', value: 3 },\n    { label: 'Option 4', value: 4 },\n  ];\n\n  private readonly fieldWidth: string = 'calc(50% - 12px)';\n  public formValue: IFormGeneratorExample = {} as IFormGeneratorExample;\n  public formExample = this.formGeneratorService.init<IFormGeneratorExample>([\n    [\n      {\n        name: 'fileUpload',\n        type: 'file-upload',\n        label: 'File upload',\n        additional: { fileUpload: { maxFiles: 3 } },\n      },\n    ],\n    [\n      {\n        name: 'imageCropper',\n        type: 'image-cropper',\n        label: 'Image Cropper',\n      },\n      {\n        name: 'imageCropperOutro',\n        type: 'image-cropper',\n        label: 'Image Cropper 2',\n        additional: {\n          imageCropper: {\n            rounded: true,\n          },\n        },\n      },\n    ],\n    [\n      {\n        type: 'input',\n        name: 'password',\n        label: 'Password',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n        additional: { inputType: `password` },\n      },\n      {\n        name: 'email',\n        type: 'input',\n        label: 'email',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n        additional: { inputType: `email` },\n      },\n    ],\n    [\n      {\n        name: 'name',\n        label: 'Name',\n        type: 'input',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n      {\n        name: 'select',\n        type: 'select',\n        label: 'Select',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n    ],\n    [\n      {\n        name: 'age',\n        label: 'Age',\n        type: 'input',\n        width: this.fieldWidth,\n        additional: { inputType: `number` },\n      },\n      {\n        name: 'radio',\n        type: 'radio',\n        label: 'radio',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n    ],\n    [\n      {\n        name: 'birthDate',\n        type: 'datepicker',\n        label: 'Birth date',\n        width: this.fieldWidth,\n      },\n      {\n        name: 'rage',\n        label: 'Rage',\n        type: 'datepicker',\n        width: this.fieldWidth,\n        additional: { datepicker: { isDatepickerRange: true } },\n      },\n    ],\n    [{ type: 'textarea', name: 'description', label: 'Description' }],\n    [{ label: '', type: 'text-editor', name: 'text-editor' }],\n    [\n      {\n        name: 'isAdmin',\n        type: 'checkbox',\n        label: 'Is admin',\n        width: this.fieldWidth,\n        additional: { checkbox: { isToggle: true } },\n      },\n    ],\n  ]);\n\n  constructor(private formGeneratorService: FormGeneratorService) {}\n\n  ngOnInit() {\n    this.formExample.setOptionsField('radio', this.defaultOptions);\n    this.formExample.setOptionsField('select', this.defaultOptions);\n\n    this.formExample.setInitialValue('name', 'Valor inicial');\n  }\n\n  public onSubmit(model: IFormGeneratorExample) {\n    alert(JSON.stringify(model));\n  }\n\n  public onValueChange(model: IFormGeneratorExample) {\n    this.formValue = model;\n  }\n}\n\ninterface IFormGeneratorExample {\n  age: number;\n  name: string;\n  email: string;\n  radio: number;\n  select: number;\n  isAdmin: boolean;\n  description: string;\n  birthDate: string | Date;\n  rage: DatePickerRangeValue;\n}\n",
            "properties": [
                {
                    "name": "age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 167
                },
                {
                    "name": "birthDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | Date",
                    "optional": false,
                    "description": "",
                    "line": 174
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 173
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 169
                },
                {
                    "name": "isAdmin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 172
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 168
                },
                {
                    "name": "radio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 170
                },
                {
                    "name": "rage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DatePickerRangeValue",
                    "optional": false,
                    "description": "",
                    "line": 175
                },
                {
                    "name": "select",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 171
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IFormGeneratorField",
            "id": "interface-IFormGeneratorField-f4f4fb7694b6b9863eeb5322fb355da465c1a1c790b03289db9f78fce8ca26933dff4e2b3631f9d6b2f878e021635317eb020c01137dc95bab91b7ed73e3101a",
            "file": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../interfaces/app-form.interface';\nimport { FileUploadType } from '../types/file-upload.type';\nimport { InputType } from '../types/input.type';\nimport { ModelControlType } from '../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField {\n  name: string;\n  label: string;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n\nexport interface IFormGeneratorConfig {\n  fields: IFormGeneratorField[][];\n}\n\nexport interface IFormGeneratorFields {\n  fields: IFormGeneratorField[][];\n}\n",
            "properties": [
                {
                    "name": "additional",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<IFormGeneratorFieldAdditional>",
                    "optional": true,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": true,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGeneratorFieldType",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "validators",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "(function)[]",
                    "optional": true,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 55
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IFormGeneratorFieldAdditional",
            "id": "interface-IFormGeneratorFieldAdditional-f4f4fb7694b6b9863eeb5322fb355da465c1a1c790b03289db9f78fce8ca26933dff4e2b3631f9d6b2f878e021635317eb020c01137dc95bab91b7ed73e3101a",
            "file": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../interfaces/app-form.interface';\nimport { FileUploadType } from '../types/file-upload.type';\nimport { InputType } from '../types/input.type';\nimport { ModelControlType } from '../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField {\n  name: string;\n  label: string;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n\nexport interface IFormGeneratorConfig {\n  fields: IFormGeneratorField[][];\n}\n\nexport interface IFormGeneratorFields {\n  fields: IFormGeneratorField[][];\n}\n",
            "properties": [
                {
                    "name": "checkbox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ICheckboxAdditional>",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "datepicker",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<IDatePickerAdditional>",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "fileUpload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<IFileUploadAdditional>",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "imageCropper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<IImageCropperAdditional>",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "inputType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputType",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFormOption[]",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "textEditor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ITextEditorAdditional>",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IFormGeneratorFields",
            "id": "interface-IFormGeneratorFields-f4f4fb7694b6b9863eeb5322fb355da465c1a1c790b03289db9f78fce8ca26933dff4e2b3631f9d6b2f878e021635317eb020c01137dc95bab91b7ed73e3101a",
            "file": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../interfaces/app-form.interface';\nimport { FileUploadType } from '../types/file-upload.type';\nimport { InputType } from '../types/input.type';\nimport { ModelControlType } from '../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField {\n  name: string;\n  label: string;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n\nexport interface IFormGeneratorConfig {\n  fields: IFormGeneratorField[][];\n}\n\nexport interface IFormGeneratorFields {\n  fields: IFormGeneratorField[][];\n}\n",
            "properties": [
                {
                    "name": "fields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFormGeneratorField[][]",
                    "optional": false,
                    "description": "",
                    "line": 66
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IFormOption",
            "id": "interface-IFormOption-a64fcd0afb413378e8aba5509f005903a8149d9dcabe51fc42262576bc548e76751685cdb1d4e40dae40f433f499f7cccc9c1259f0aaf748e0aea638448433b3",
            "file": "src/app/modules/@core/interfaces/app-form.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ModelControlType } from '../types/model-control.type';\n\nexport interface IFormOption {\n  label: string;\n  value: ModelControlType;\n}\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IImageCropperAdditional",
            "id": "interface-IImageCropperAdditional-f4f4fb7694b6b9863eeb5322fb355da465c1a1c790b03289db9f78fce8ca26933dff4e2b3631f9d6b2f878e021635317eb020c01137dc95bab91b7ed73e3101a",
            "file": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../interfaces/app-form.interface';\nimport { FileUploadType } from '../types/file-upload.type';\nimport { InputType } from '../types/input.type';\nimport { ModelControlType } from '../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField {\n  name: string;\n  label: string;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n\nexport interface IFormGeneratorConfig {\n  fields: IFormGeneratorField[][];\n}\n\nexport interface IFormGeneratorFields {\n  fields: IFormGeneratorField[][];\n}\n",
            "properties": [
                {
                    "name": "aspectRatio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "buttonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "cropperMinWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "imageURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "maintainAspectRatio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "onlyScaleDown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "rounded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "scale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ITextEditorAdditional",
            "id": "interface-ITextEditorAdditional-f4f4fb7694b6b9863eeb5322fb355da465c1a1c790b03289db9f78fce8ca26933dff4e2b3631f9d6b2f878e021635317eb020c01137dc95bab91b7ed73e3101a",
            "file": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../interfaces/app-form.interface';\nimport { FileUploadType } from '../types/file-upload.type';\nimport { InputType } from '../types/input.type';\nimport { ModelControlType } from '../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField {\n  name: string;\n  label: string;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n\nexport interface IFormGeneratorConfig {\n  fields: IFormGeneratorField[][];\n}\n\nexport interface IFormGeneratorFields {\n  fields: IFormGeneratorField[][];\n}\n",
            "properties": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AngularEditorConfig",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IThemeConfig",
            "id": "interface-IThemeConfig-5f20101d45359bf01d75fa622b10fdfdedd9948b5abbca4c0f3b13fb67e12f170d3b7a9dfbac51f99cdf228fa8ca0ccacf2e8c68dfe2710ac59fff9e03a0f34f",
            "file": "src/app/modules/@core/interfaces/theme.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IThemeConfig {\n  bgPrimary: string;\n  bgSecondary: string;\n  textPrimary: string;\n}\n",
            "properties": [
                {
                    "name": "bgPrimary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "bgSecondary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "textPrimary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AlertService",
            "id": "injectable-AlertService-11728fdb4a6088c794af05047c663b81dd0c7d8733bc3526f585d27bd3dd065aaaa8be887ab763ab64c54823f3cd14d102f3e8db5e45ca6a4e113bca4cfb14b2",
            "file": "src/app/modules/@core/services/alert.service.ts",
            "properties": [
                {
                    "name": "snackBar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSnackBar",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n  constructor(public snackBar: MatSnackBar) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ClipboardService",
            "id": "injectable-ClipboardService-bd7c82dac3a344c21a610eb5aacf65fafec5557d25aac43378c4cb18c7de67fc86f3e9114092a29d871859eb2f3fe89fec90ce4e8c32f9432e4e5e71e7a94aa5",
            "file": "src/app/modules/@core/services/clipboard.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "copy",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "snackMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        },
                        {
                            "name": "snackDuration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "50000"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "snackMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "snackDuration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "50000",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { AlertService } from './alert.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ClipboardService {\n  constructor(private alertService: AlertService) {}\n\n  public copy(value: string, snackMessage = '', snackDuration = 50000) {\n    const selBox = document.createElement('textarea');\n    selBox.value = value;\n\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n\n    if (snackMessage)\n      this.alertService.snackBar.open(snackMessage, 'close', {\n        duration: snackDuration,\n      });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "FormGeneratorService",
            "id": "injectable-FormGeneratorService-c83476ef39db4a082277e7cc13512b15641f1b38cadc98df91a183a609694877498a6f0a781117f13b9d9f6cd4681d33bc248190efe4e85fbe9831aa6aafdaac",
            "file": "src/app/modules/@core/_form-generator/form-generator.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "init",
                    "args": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ fields: {}; setInitialValue: (fieldName: keyof Data, value: ModelControlType) => void; setOptionsField: (fieldName: keyof Data, options: {}) => void; }",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "looperHandler",
                    "args": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fieldName",
                            "type": "KeyType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "callback",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "field",
                                    "type": "IFormGeneratorField",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [
                        "KeyType"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fieldName",
                            "type": "KeyType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "callback",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "field",
                                    "type": "IFormGeneratorField",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setInitialValue",
                    "args": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fieldName",
                            "type": "KeyType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [
                        "KeyType"
                    ],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fieldName",
                            "type": "KeyType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setOptionsField",
                    "args": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fieldName",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "IFormOption[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fieldName",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "IFormOption[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { IFormOption } from '../interfaces/app-form.interface';\nimport { ModelControlType } from '../types/model-control.type';\nimport { IFormGeneratorField } from './app-form-generator.interface';\n\n@Injectable({ providedIn: 'root' })\nexport class FormGeneratorService {\n  constructor() {}\n\n  public init<Data>(fields: IFormGeneratorField[][]) {\n    type FieldKeyType = keyof Data;\n\n    return {\n      fields,\n      setInitialValue: (fieldName: FieldKeyType, value: ModelControlType) =>\n        this.setInitialValue<FieldKeyType>(fields, fieldName, value),\n      setOptionsField: (fieldName: FieldKeyType, options: IFormOption[]) =>\n        this.setOptionsField<FieldKeyType>(fields, fieldName, options),\n    };\n  }\n\n  private looperHandler<KeyType>(\n    fields: IFormGeneratorField[][],\n    fieldName: KeyType,\n    callback: (field: IFormGeneratorField) => void\n  ) {\n    fields.forEach((row) =>\n      row.forEach((field) => {\n        if (field.name === fieldName) callback(field);\n      })\n    );\n  }\n\n  private setInitialValue<KeyType>(\n    fields: IFormGeneratorField[][],\n    fieldName: KeyType,\n    value: ModelControlType\n  ) {\n    this.looperHandler(fields, fieldName, (field) => {\n      field.initialValue = value;\n    });\n  }\n\n  private setOptionsField<Data>(\n    fields: IFormGeneratorField[][],\n    fieldName: Data,\n    options: IFormOption[]\n  ) {\n    this.looperHandler(fields, fieldName, (field) => {\n      field.additional = { ...field.additional, options };\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SEOService",
            "id": "injectable-SEOService-213f46a66f7057ce9532df7bbad1a5f73eb4a630561afba96a6cf980a18220192ed346b913452251afe19c86cadfeaf561f1557b195625ab6ffa5d415b4988c4",
            "file": "src/app/modules/@core/services/seo.service.ts",
            "properties": [
                {
                    "name": "$routerTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "destoryTitleMonitoring",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "initTitleMonitoring",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Subscription, filter, map } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class SEOService {\n  private $routerTitle!: Subscription;\n\n  constructor(\n    private title: Title,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  public initTitleMonitoring() {\n    this.$routerTitle = this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationEnd),\n        map(() => {\n          const child: ActivatedRoute | null = this.route.firstChild;\n          const title = child && child.snapshot.data['title'];\n\n          if (title) return title;\n        })\n      )\n      .subscribe((title) => {\n        if (title) this.title.setTitle(`Boilerplate - ${title}`);\n      });\n  }\n\n  public destoryTitleMonitoring() {\n    this.$routerTitle.unsubscribe();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ThemeService",
            "id": "injectable-ThemeService-c4d0cce3467d07a51232eb26466a2bafa458f6c61849fdaa770b9f436af4ac10bb604178a4ee27461855a79430f7d7f64995696582df95b23729988ab7f38984",
            "file": "src/app/modules/@core/services/theme.service.ts",
            "properties": [
                {
                    "name": "defaultTheme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeType",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "init",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "setTheme",
                    "args": [
                        {
                            "name": "theme",
                            "type": "ThemeType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "ThemeType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setVariables",
                    "args": [
                        {
                            "name": "theme",
                            "type": "ThemeType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "ThemeType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { THEME_CONFIG } from '../config/theme.config';\nimport { STORAGE_THEME_STATE_KEY } from '../constants/storage.constant';\nimport { ThemeType } from '../types/theme.type';\n\n@Injectable({ providedIn: 'root' })\nexport class ThemeService {\n  private readonly defaultTheme: ThemeType = 'light';\n\n  constructor() {}\n\n  public get currentTheme() {\n    return (\n      (localStorage.getItem(STORAGE_THEME_STATE_KEY) as ThemeType) ||\n      this.defaultTheme\n    );\n  }\n\n  public setTheme(theme: ThemeType) {\n    this.setVariables(theme);\n\n    document.body.className = theme;\n    localStorage.setItem(STORAGE_THEME_STATE_KEY, theme);\n  }\n\n  public init() {\n    this.setTheme(this.currentTheme);\n  }\n\n  public setVariables(theme: ThemeType) {\n    const appStyle = document.documentElement.style;\n    if (!appStyle) return;\n\n    const variables = THEME_CONFIG[theme];\n    appStyle.setProperty(`--bg-primary`, variables.bgPrimary);\n    appStyle.setProperty(`--bg-secondary`, variables.bgSecondary);\n    appStyle.setProperty(`--text-primary`, variables.textPrimary);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "accessors": {
                "currentTheme": {
                    "name": "currentTheme",
                    "getSignature": {
                        "name": "currentTheme",
                        "type": "",
                        "returnType": "",
                        "line": 12
                    }
                }
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "StorybookFormBase",
            "id": "class-StorybookFormBase-f06dae442fc9eec28dc56aac0145cb6305e2079542f83334c43c03ebbe656447e6811d2ff2292dd4ed2eb19a26f2ae3694a71302e1ac96aca16d5e7d11cdd65c",
            "file": "src/stories/form/_base.form.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { IFormOption } from '../../app/modules/@core/interfaces/app-form.interface';\n\nexport class StorybookFormBase {\n  public initialOptions: IFormOption[] = [\n    { label: 'Option 1', value: 1 },\n    { label: 'Option 2', value: 2 },\n  ];\n\n  public commonImports = [\n    FormsModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    BrowserAnimationsModule,\n  ];\n\n  public buildExcludeFormProps(items: string[], excludeCommon = true) {\n    const commonInputs = ['model', 'isDynamic'];\n    const commonProperties = [\n      'onChange',\n      'onTouched',\n      'rangeControl',\n      '$modelControl',\n    ];\n    const commonMethods = [\n      'ngOnInit',\n      'writeValue',\n      'ngOnDestroy',\n      'setInitialValue',\n      'registerOnChange',\n      'registerOnTouched',\n      'initMonitoringChanges',\n    ];\n\n    const commonItems = [\n      ...commonInputs,\n      ...commonMethods,\n      ...commonProperties,\n    ];\n    const excludeItems = excludeCommon ? commonItems : [];\n\n    return [...excludeItems, ...items];\n  }\n}\n",
            "properties": [
                {
                    "name": "commonImports",
                    "defaultValue": "[\n    FormsModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    BrowserAnimationsModule,\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "initialOptions",
                    "defaultValue": "[\n    { label: 'Option 1', value: 1 },\n    { label: 'Option 2', value: 2 },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFormOption[]",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "buildExcludeFormProps",
                    "args": [
                        {
                            "name": "items",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "excludeCommon",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true"
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "excludeCommon",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "AnimateDirective",
            "id": "directive-AnimateDirective-516bdbd565e14e29fc0f61a29cd33a37afbacee33da7afc83d04ef54518ab2867e47df119f804601f981fc934b3194d556cea38fe780d30a2e4d7bfb73148dc2",
            "file": "src/app/modules/@core/directives/animation.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  standalone: true,\n  selector: '[animate]',\n})\nexport class AnimateDirective implements OnInit {\n  @Input() animation = '';\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.setAnimation();\n  }\n\n  setAnimation() {\n    this.el.nativeElement.classList.add(`animate__animated`);\n    this.el.nativeElement.classList.add(this.animation);\n  }\n}\n",
            "selector": "[animate]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "animation",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setAnimation",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "FieldGeneratorDirective",
            "id": "directive-FieldGeneratorDirective-61e812226bc711ea452ade1a14bb781f7a2fef778908a0e84eab6989b320d69ed38cd905d0654f08dc311c73a3ea16d2d9b74c8888737a739d7eb294cbabfdd5",
            "file": "src/app/modules/@core/_form-generator/field-generator.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  Input,\n  ViewContainerRef,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { AppCheckboxComponent } from '../components/form/app-checkbox/app-checkbox.component';\nimport { AppDatepickerComponent } from '../components/form/app-datepicker/app-datepicker.component';\nimport {\n  APP_FILE_UPLOAD_DEFAULT_VALUES,\n  AppFileUploadComponent,\n} from '../components/form/app-file-upload/app-file-upload.component';\nimport {\n  APP_IMAGE_CROPPER_DEFAULT_VALUES,\n  AppImageCropperComponent,\n} from '../components/form/app-image-cropper/app-image-cropper.component';\nimport { AppInputComponent } from '../components/form/app-input/app-input.component';\nimport { AppRadioButtonComponent } from '../components/form/app-radio-button/app-radio-button.component';\nimport { AppSelectComponent } from '../components/form/app-select/app-select.component';\nimport { AppTextEditorComponent } from '../components/form/app-text-editor/app-text-editor.component';\nimport { AppTextareaComponent } from '../components/form/app-textarea/app-textarea.component';\nimport { IFormGeneratorField } from './app-form-generator.interface';\n\nconst components = {\n  input: AppInputComponent,\n  select: AppSelectComponent,\n  radio: AppRadioButtonComponent,\n  textarea: AppTextareaComponent,\n  checkbox: AppCheckboxComponent,\n  datepicker: AppDatepickerComponent,\n  'text-editor': AppTextEditorComponent,\n  'file-upload': AppFileUploadComponent,\n  'image-cropper': AppImageCropperComponent,\n};\n\nexport type FormGeneratorFieldType = keyof typeof components;\ntype HandlerCallbackPropsType = { [key in FormGeneratorFieldType]: Function };\n\n@Directive({\n  standalone: true,\n  selector: '[appFieldGenerator]',\n})\nexport class FieldGeneratorDirective {\n  @Input({ required: true }) group!: FormGroup;\n  @Input({ required: true }) field!: IFormGeneratorField;\n\n  private componentRef!: ComponentRef<any>;\n\n  constructor(\n    private container: ViewContainerRef,\n    private resolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnInit(): void {\n    const factory = this.resolver.resolveComponentFactory(\n      components[this.field.type] as any\n    );\n\n    this.componentRef = this.container.createComponent(factory);\n\n    this.componentRef.instance.isDynamic = true;\n    this.componentRef.instance.group = this.group;\n    this.componentRef.instance.name = this.field.name;\n    this.componentRef.instance.label = this.field.label;\n    this.componentRef.instance.formControlName = this.field.name;\n\n    if (this.field.additional) {\n      const callbacks: HandlerCallbackPropsType = {\n        input: () => {},\n        radio: () => {},\n        select: () => {},\n        textarea: () => {},\n        checkbox: () => this.setCheckboxProps(),\n        datepicker: () => this.setDatePickerProps(),\n        'text-editor': () => this.setTextEditorProps(),\n        'file-upload': () => this.setFileUploadProps(),\n        'image-cropper': () => this.setImageCropperProps(),\n      };\n\n      this.setCommonProps();\n      callbacks[this.field.type]();\n    }\n  }\n\n  private setCommonProps() {\n    if (!this.field.additional) return;\n\n    const { options, inputType, className, placeholder } =\n      this.field.additional;\n\n    this.componentRef.instance.items = options || [];\n    this.componentRef.instance.type = inputType || '';\n\n    this.componentRef.instance.className = className || '';\n    this.componentRef.instance.placeholder = placeholder || '';\n  }\n\n  private setCheckboxProps() {\n    if (!this.field.additional) return;\n\n    this.componentRef.instance.toggle =\n      this.field.additional.checkbox?.isToggle || false;\n  }\n\n  private setTextEditorProps() {\n    if (!this.field.additional) return;\n\n    this.componentRef.instance.config =\n      this.field.additional.textEditor?.config || {};\n  }\n\n  private setDatePickerProps() {\n    if (!this.field.additional) return;\n\n    this.componentRef.instance.range =\n      this.field.additional.datepicker?.isDatepickerRange || false;\n  }\n\n  private setFileUploadProps() {\n    if (!this.field.additional) return;\n\n    const { instance } = this.componentRef;\n    const { fileUpload } = this.field.additional;\n    const props = APP_FILE_UPLOAD_DEFAULT_VALUES;\n\n    instance.maxFiles = fileUpload?.maxFiles || props.maxFiles;\n    instance.fileTypes = fileUpload?.fileTypes || props.fileTypes;\n    instance.limitErrorMessage =\n      fileUpload?.limitErrorMessage || props.limitErrorMessage;\n  }\n\n  private setImageCropperProps() {\n    if (!this.field.additional) return;\n\n    const { instance } = this.componentRef;\n    const { imageCropper } = this.field.additional;\n    const props = APP_IMAGE_CROPPER_DEFAULT_VALUES;\n\n    instance.scale = imageCropper?.scale || props.scale;\n    instance.height = imageCropper?.height || props.height;\n    instance.rounded = imageCropper?.rounded || props.rounded;\n    instance.imageURL = imageCropper?.imageURL || props.imageURL;\n    instance.buttonText = imageCropper?.buttonText || props.buttonText;\n    instance.background = imageCropper?.background || props.background;\n    instance.aspectRatio = imageCropper?.aspectRatio || props.aspectRatio;\n    instance.onlyScaleDown = imageCropper?.onlyScaleDown || props.onlyScaleDown;\n    instance.cropperMinWidth =\n      imageCropper?.cropperMinWidth || props.cropperMinWidth;\n    instance.maintainAspectRatio =\n      imageCropper?.maintainAspectRatio || props.maintainAspectRatio;\n  }\n}\n",
            "selector": "[appFieldGenerator]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "required": true,
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 47,
                    "type": "IFormGeneratorField",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 46,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "componentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setCheckboxProps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setCommonProps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setDatePickerProps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setFileUploadProps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setImageCropperProps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setTextEditorProps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "container",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "container",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppCheckboxComponent",
            "id": "component-AppCheckboxComponent-948fc0bd892dc113fd9fe4755953bbb4d65acd0329943c73e474a11a478b9a020ef4b999738585c548eda5f72918e68c0afcc81c8d19b2a938a79bbf7ed32e5a",
            "file": "src/app/modules/@core/components/form/app-checkbox/app-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppCheckboxComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": false,
                    "name": "toggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MatCheckboxModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatSlideToggleModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, booleanAttribute, forwardRef } from '@angular/core';\nimport {\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-checkbox',\n  styleUrl: './app-checkbox.component.scss',\n  templateUrl: './app-checkbox.component.html',\n  imports: [\n    FormsModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n  ],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppCheckboxComponent),\n    },\n  ],\n})\nexport class AppCheckboxComponent extends ModelControl {\n  @Input({ transform: booleanAttribute }) toggle: boolean = false;\n\n  ngOnInit() {\n    if (!this.isDynamic) this.initMonitoringChanges();\n  }\n}\n",
            "styleUrl": "./app-checkbox.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<article id=\"app-checkbox\" [class]=\"className\" [formGroup]=\"group\">\n  @if(toggle) {\n  <mat-slide-toggle [id]=\"id\" [name]=\"name\" [formControlName]=\"formControlName\">\n    {{ label }}\n  </mat-slide-toggle>\n  } @else {\n  <mat-checkbox [id]=\"id\" [name]=\"name\" [formControlName]=\"formControlName\">\n    {{ label }}\n  </mat-checkbox>\n  }\n</article>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-69d5b4a8223121b40bffd358e7cd98205db1cefabaa8ccdd7bab7cd9a3e5242b7c2b87ce23160acefdbaad22c1663eeb64bdd93c00be89d0812502c47bc35e4e",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "prepareRoute",
                    "args": [
                        {
                            "name": "outlet",
                            "type": "RouterOutlet",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "outlet",
                            "type": "RouterOutlet",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { trigger } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule, RouterOutlet } from '@angular/router';\nimport Iconify from '@iconify/iconify';\nimport { ROUTER_STACK_ANIMATION } from './modules/@core/animations/router-stack.animation';\nimport { SEOService } from './modules/@core/services/seo.service';\nimport { ThemeService } from './modules/@core/services/theme.service';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  styleUrl: './app.component.scss',\n  templateUrl: './app.component.html',\n  imports: [CommonModule, RouterOutlet, RouterModule],\n  animations: [trigger('triggerName', ROUTER_STACK_ANIMATION)],\n})\nexport class AppComponent {\n  constructor(\n    private seoService: SEOService,\n    private themeService: ThemeService\n  ) {\n    Iconify.listIcons();\n    this.themeService.init();\n    this.seoService.initTitleMonitoring();\n  }\n\n  public prepareRoute(outlet: RouterOutlet) {\n    return (\n      outlet && outlet.activatedRouteData && outlet.activatedRouteData['id']\n    );\n  }\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "seoService",
                        "type": "SEOService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "seoService",
                        "type": "SEOService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<main [@triggerName]=\"prepareRoute(outlet)\">\n  <router-outlet #outlet=\"outlet\" />\n</main>\n"
        },
        {
            "name": "AppDatepickerComponent",
            "id": "component-AppDatepickerComponent-06ee4b5cf68c1123d5da6162ed836522c72c0c0c586b71cbd328d8ea72b58710462053f8e1107c12bebd2cba5c568b3556830fce5b5bb17efd8d74f2e02c78fa",
            "file": "src/app/modules/@core/components/form/app-datepicker/app-datepicker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppDatepickerComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-datepicker",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-datepicker.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "placeholderEnd",
                    "defaultValue": "'End date'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholderStart",
                    "defaultValue": "'Start date'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "range",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "rangeControl",
                    "defaultValue": "new FormGroup({\n    start: new FormControl<Date | null>(null),\n    end: new FormControl<Date | null>(null),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, booleanAttribute, forwardRef } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-datepicker',\n  styleUrl: './app-datepicker.component.scss',\n  templateUrl: './app-datepicker.component.html',\n  imports: [\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppDatepickerComponent),\n    },\n  ],\n})\nexport class AppDatepickerComponent extends ModelControl {\n  @Input() placeholderEnd: string = 'End date';\n  @Input() placeholderStart: string = 'Start date';\n  @Input({ transform: booleanAttribute }) range: boolean = false;\n\n  public rangeControl = new FormGroup({\n    start: new FormControl<Date | null>(null),\n    end: new FormControl<Date | null>(null),\n  });\n\n  ngOnInit() {\n    if (!this.isDynamic) this.initMonitoringChanges();\n\n    this.$modelControl = this.rangeControl.valueChanges.subscribe((value) => {\n      this.group.patchValue({ [this.formControlName]: value });\n    });\n  }\n}\n",
            "styleUrl": "./app-datepicker.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "@if(range) {\n<mat-form-field\n  [class]=\"className\"\n  [appearance]=\"appearance\"\n  id=\"app-datepicker-range\"\n>\n  <mat-label>{{ label }}</mat-label>\n\n  <mat-date-range-input [formGroup]=\"rangeControl\" [rangePicker]=\"pickerRange\">\n    <input\n      matStartDate\n      formControlName=\"start\"\n      [placeholder]=\"placeholderStart\"\n    />\n    <input matEndDate formControlName=\"end\" [placeholder]=\"placeholderEnd\" />\n  </mat-date-range-input>\n\n  <mat-datepicker-toggle matIconSuffix [for]=\"pickerRange\" />\n  <mat-date-range-picker #pickerRange />\n</mat-form-field>\n} @else {\n<mat-form-field\n  id=\"app-datepicker\"\n  [class]=\"className\"\n  [formGroup]=\"group\"\n  [appearance]=\"appearance\"\n>\n  <mat-label>{{ label }}</mat-label>\n\n  <input\n    matInput\n    [id]=\"id\"\n    [name]=\"name\"\n    [matDatepicker]=\"picker\"\n    [placeholder]=\"placeholder\"\n    [formControlName]=\"formControlName\"\n  />\n  <mat-datepicker-toggle matIconSuffix [for]=\"picker\" />\n  <mat-datepicker #picker />\n</mat-form-field>\n}\n"
        },
        {
            "name": "AppFileUploadComponent",
            "id": "component-AppFileUploadComponent-b7d837ccbe7ef400563d7a565454ec680ba1fcaab912f3fa1908ebddc38523140946ef52cdc5312a551f6892ff5b827393a65988758b1eca8565c7adaaf6c766",
            "file": "src/app/modules/@core/components/form/app-file-upload/app-file-upload.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppFileUploadComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-file-upload",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-file-upload.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "fileTypes",
                    "defaultValue": "['*/*']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "FileUploadType[]",
                    "decorators": []
                },
                {
                    "name": "limitErrorMessage",
                    "defaultValue": "`File limit reached`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxFiles",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "files",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File[]",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "filesControl",
                    "defaultValue": "new FormGroup({ model: new FormControl<File[]>([]) })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "fileType",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "inputId",
                    "defaultValue": "'file-upload-input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isMultiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "handleDragOver",
                    "args": [
                        {
                            "name": "event",
                            "type": "DragEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "DragEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleDrop",
                    "args": [
                        {
                            "name": "event",
                            "type": "DragEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "DragEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFileChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleRemove",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "processFiles",
                    "args": [
                        {
                            "name": "files",
                            "type": "FileList | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "files",
                            "type": "FileList | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, forwardRef } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { FileUploadType } from '../../../types/file-upload.type';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-file-upload',\n  styleUrl: './app-file-upload.component.scss',\n  templateUrl: './app-file-upload.component.html',\n  imports: [ReactiveFormsModule],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppFileUploadComponent),\n    },\n  ],\n})\nexport class AppFileUploadComponent extends ModelControl {\n  @Input() maxFiles: number = 1;\n  @Input() fileTypes: FileUploadType[] = ['*/*'];\n  @Input() limitErrorMessage: string = `File limit reached`;\n\n  public files: File[] = [];\n  public isMultiple?: boolean;\n  public fileType: string = '';\n  public inputId: string = 'file-upload-input';\n  public filesControl = new FormGroup({ model: new FormControl<File[]>([]) });\n\n  ngOnInit() {\n    this.isMultiple = this.maxFiles > 1;\n    this.fileType = this.fileTypes.join(',');\n    this.inputId = `${this.inputId}-${this.name}`;\n\n    if (!this.isDynamic) this.initMonitoringChanges();\n\n    this.$modelControl = this.filesControl.valueChanges.subscribe(() => {\n      this.group.patchValue({ [this.formControlName]: this.files });\n    });\n  }\n\n  public handleDragOver(event: DragEvent) {\n    event.preventDefault();\n  }\n\n  public handleDrop(event: DragEvent) {\n    event.preventDefault();\n    this.processFiles(event.dataTransfer?.files);\n  }\n\n  public handleFileChange(event: Event) {\n    const inputElement = event.target as HTMLInputElement;\n    this.processFiles(inputElement.files);\n  }\n\n  public handleRemove(index: number) {\n    this.files.splice(index, 1);\n    this.filesControl.setValue({ model: [] });\n  }\n\n  public processFiles(files?: FileList | null) {\n    if (!files || !files.length) return;\n\n    const items = [];\n    for (let i = 0; i < files.length; i++) items.push(files[i]);\n\n    const filesControl =\n      this.maxFiles === 1 ? items : [...this.files, ...items];\n\n    if (files.length > this.maxFiles || filesControl.length > this.maxFiles) {\n      this.alertService.snackBar.open(this.limitErrorMessage, 'Close');\n      return;\n    }\n\n    this.files = filesControl;\n    this.filesControl.setValue({ model: [] });\n  }\n}\n\nexport const APP_FILE_UPLOAD_DEFAULT_VALUES = {\n  maxFiles: 1,\n  fileTypes: ['*/*'],\n  limitErrorMessage: `File limit reached`,\n};\n",
            "styleUrl": "./app-file-upload.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<article id=\"app-file-upload\" [formGroup]=\"filesControl\">\n  <input\n    type=\"file\"\n    [name]=\"name\"\n    [id]=\"inputId\"\n    [accept]=\"fileType\"\n    [formGroup]=\"group\"\n    formControlName=\"model\"\n    (change)=\"handleFileChange($event)\"\n    [attr.multiple]=\"isMultiple ? true : null\"\n  />\n\n  <label\n    [for]=\"inputId\"\n    (drop)=\"handleDrop($event)\"\n    (dragover)=\"handleDragOver($event)\"\n  >\n    <h3>{{ label }}</h3>\n\n    @if(!files.length) {\n    <p>{{ placeholder }}</p>\n    } @if(files.length === 1) {\n    <span>{{ files[0].name }}</span>\n    } @else if(files.length > 1) {\n    <span>{{ files.length }}/{{ maxFiles }}</span>\n    }\n  </label>\n\n  @if(files.length > 1) {\n  <ul>\n    @for (item of files; track $index) {\n    <li>\n      <span>{{ item.name }}</span>\n      <button (click)=\"handleRemove($index)\">\n        <i class=\"iconify\" data-icon=\"ep:close-bold\"></i>\n      </button>\n    </li>\n    }\n  </ul>\n  }\n</article>\n"
        },
        {
            "name": "AppFormGeneratorComponent",
            "id": "component-AppFormGeneratorComponent-04569420b467780f9653559e8114e03a8daf9b2bdf2062e1a987f3a68e0f266db3e467af0ca9c1e69b91b65feedfc68879f694155d8dea9254f7340b233a825e",
            "file": "src/app/modules/@core/_form-generator/app-form-generator/app-form-generator.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-generator",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-form-generator.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actionPositionX",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "\"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "actionPositionY",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"top\" | \"bottom\"",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "column",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fieldGap",
                    "defaultValue": "'16px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "fields",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 35,
                    "type": "IFormGeneratorField[][]",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "mobileColumn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "submitText",
                    "defaultValue": "'Submit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "watchValues",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter"
                },
                {
                    "name": "onValueChanges",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "defaultFieldWidth",
                    "defaultValue": "'100%'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "dynamicColumClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "formGroup",
                    "defaultValue": "this.formBuilder.group({})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgStyle"
                },
                {
                    "name": "NgClass"
                },
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FieldGeneratorDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { JsonPipe, NgClass, NgStyle } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  booleanAttribute,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IFormGeneratorField } from '../app-form-generator.interface';\nimport { FieldGeneratorDirective } from '../field-generator.directive';\n\n@Component({\n  standalone: true,\n  selector: 'app-form-generator',\n  encapsulation: ViewEncapsulation.None,\n  styleUrl: './app-form-generator.component.scss',\n  templateUrl: './app-form-generator.component.html',\n  imports: [\n    NgStyle,\n    NgClass,\n    JsonPipe,\n    ReactiveFormsModule,\n    FieldGeneratorDirective,\n  ],\n})\nexport class AppFormGeneratorComponent {\n  @Input() fieldGap: string = '16px';\n  @Input() submitText: string = 'Submit';\n\n  @Input() actionPositionY: 'top' | 'bottom' = 'top';\n  @Input() actionPositionX: 'left' | 'right' = 'right';\n\n  @Input({ required: true }) fields: IFormGeneratorField[][] = [];\n  @Input({ transform: booleanAttribute }) column: boolean = false;\n  @Input({ transform: booleanAttribute }) watchValues: boolean = false;\n  @Input({ transform: booleanAttribute }) mobileColumn: boolean = false;\n\n  @Output() onSubmit = new EventEmitter();\n  @Output() onValueChanges = new EventEmitter();\n\n  public dynamicColumClass: string = '';\n  public readonly defaultFieldWidth: string = '100%';\n  public formGroup: FormGroup = this.formBuilder.group({});\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  private initForm() {\n    const group = this.fields.flat().reduce((initial, field) => {\n      const validators = field.validators || [];\n\n      return {\n        ...initial,\n        [field.name]: [field.initialValue, ...validators],\n      };\n    }, {});\n\n    this.formGroup = this.formBuilder.group(group);\n    this.formGroup.controls;\n\n    if (this.watchValues) {\n      this.formGroup.valueChanges.subscribe((value) => {\n        this.onValueChanges.emit(value);\n      });\n    }\n  }\n\n  public handleSubmit() {\n    console.log(this.formGroup)\n    // this.onSubmit.emit(this.formGroup.value);\n  }\n}\n",
            "styleUrl": "./app-form-generator.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<form\n  novalidate\n  id=\"app-form-generator\"\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"handleSubmit()\"\n>\n  <nav class=\"{{ actionPositionY }} {{ actionPositionX }}\">\n    <button class=\"btn-primary\" [disabled]=\"formGroup.invalid\" type=\"submit\">{{ submitText }}</button>\n  </nav>\n\n  <section>\n    @for (row of fields; track row) {\n    <article\n      [ngStyle]=\"{ gap: fieldGap }\"\n      [ngClass]=\"{ column, 'mobile-column': mobileColumn }\"\n    >\n      @for (item of row; track $index) {\n      <div [ngStyle]=\"{ width: item.width || defaultFieldWidth }\">\n        <ng-container\n          appFieldGenerator\n          [group]=\"formGroup\"\n          [field]=\"item\"\n        ></ng-container>\n      </div>\n      }\n    </article>\n    }\n  </section>\n</form>\n"
        },
        {
            "name": "AppFormImageComponent",
            "id": "component-AppFormImageComponent-e2d9a9691c45ff0b6e435ff37879f34fcbc7c7f47ef1262548337b342d46e4c30398a603aa99cfbeb23265fe04dd4fced27d5fed356e9a288f5ebea57f3b83d7",
            "file": "src/app/modules/@core/components/form/app-form-image/app-form-image.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-image",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-form-image.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  imports: [],\n  standalone: true,\n  selector: 'app-form-image',\n  styleUrl: './app-form-image.component.scss',\n  templateUrl: './app-form-image.component.html',\n})\nexport class AppFormImageComponent {}\n",
            "styleUrl": "./app-form-image.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>app-form-image works!</p>\n"
        },
        {
            "name": "AppImageCropperComponent",
            "id": "component-AppImageCropperComponent-0b71fcbed20117e3462da9bbf1a3fdfcef2e1d2061141383469268d3894db71af2125fe2271efaabd163f0ee905fafc91a422d750068e9f884e8f719fbbe917c",
            "file": "src/app/modules/@core/components/form/app-image-cropper/app-image-cropper.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppImageCropperComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-image-cropper",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-image-cropper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "aspectRatio",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.aspectRatio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "background",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "buttonText",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.buttonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "cropperMinWidth",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.cropperMinWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "imageURL",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.imageURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "maintainAspectRatio",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.maintainAspectRatio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "onlyScaleDown",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.onlyScaleDown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "rounded",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.rounded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "scale",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.scale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "canvasRotation",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "containWithinAspectRatio",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "imageChangedEvent",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "inputId",
                    "defaultValue": "'image-upload-input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "rotation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "sanitizer",
                    "defaultValue": "inject(DomSanitizer)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showCropper",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "transform",
                    "defaultValue": "{ translateUnit: 'px' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageTransform",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "translateH",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "translateV",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "cropperReady",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "fileChangeEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "flipAfterRotate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "flipHorizontal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "flipVertical",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "imageCropped",
                    "args": [
                        {
                            "name": "event",
                            "type": "ImageCroppedEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ImageCroppedEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "imageLoaded",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "loadImageFailed",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetImage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "rotateLeft",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "toggleContainWithinAspectRatio",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "zoomIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "zoomOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ImageCropperModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  booleanAttribute,\n  forwardRef,\n  inject,\n} from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  ImageCroppedEvent,\n  ImageCropperModule,\n  ImageTransform,\n} from 'ngx-image-cropper';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-image-cropper',\n  styleUrl: './app-image-cropper.component.scss',\n  templateUrl: './app-image-cropper.component.html',\n  imports: [ImageCropperModule, FormsModule],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppImageCropperComponent),\n    },\n  ],\n})\nexport class AppImageCropperComponent extends ModelControl {\n  @Input() scale: number = APP_IMAGE_CROPPER_DEFAULT_VALUES.scale;\n  @Input() height: string = APP_IMAGE_CROPPER_DEFAULT_VALUES.height;\n  @Input() imageURL: string = APP_IMAGE_CROPPER_DEFAULT_VALUES.imageURL;\n  @Input() background: string = APP_IMAGE_CROPPER_DEFAULT_VALUES.background;\n  @Input() buttonText: string = APP_IMAGE_CROPPER_DEFAULT_VALUES.buttonText;\n  @Input() aspectRatio: number = APP_IMAGE_CROPPER_DEFAULT_VALUES.aspectRatio;\n\n  @Input() cropperMinWidth: number =\n    APP_IMAGE_CROPPER_DEFAULT_VALUES.cropperMinWidth;\n  @Input({ transform: booleanAttribute }) rounded =\n    APP_IMAGE_CROPPER_DEFAULT_VALUES.rounded;\n  @Input({ transform: booleanAttribute }) onlyScaleDown =\n    APP_IMAGE_CROPPER_DEFAULT_VALUES.onlyScaleDown;\n  @Input({ transform: booleanAttribute }) maintainAspectRatio =\n    APP_IMAGE_CROPPER_DEFAULT_VALUES.maintainAspectRatio;\n\n  public translateH = 0;\n  public translateV = 0;\n  public loading = false;\n  public rotation?: number;\n  public canvasRotation = 0;\n  public showCropper = false;\n  public imageChangedEvent = '';\n  public containWithinAspectRatio = false;\n  public inputId: string = 'image-upload-input';\n  public transform: ImageTransform = { translateUnit: 'px' };\n\n  private sanitizer = inject(DomSanitizer);\n\n  ngOnInit() {\n    if (this.rounded) this.aspectRatio = 4 / 4;\n    if (!this.isDynamic) this.initMonitoringChanges();\n\n    this.inputId = `${this.inputId}-${this.name}`;\n  }\n\n  public imageCropped(event: ImageCroppedEvent) {\n    const preview = this.sanitizer.bypassSecurityTrustUrl(\n      event.objectUrl || event.base64 || ''\n    );\n\n    this.group.patchValue({ [this.formControlName]: event.objectUrl });\n  }\n\n  public imageLoaded() {\n    this.showCropper = true;\n  }\n\n  public cropperReady() {\n    this.loading = false;\n  }\n\n  public loadImageFailed() {\n    console.error('Load image failed');\n  }\n\n  public fileChangeEvent(event: any): void {\n    this.loading = true;\n    this.imageChangedEvent = event;\n\n    setTimeout(() => this.resetImage());\n  }\n\n  public rotateLeft() {\n    this.loading = true;\n    setTimeout(() => {\n      this.canvasRotation--;\n      this.flipAfterRotate();\n    });\n  }\n\n  public flipHorizontal() {\n    this.transform = { ...this.transform, flipH: !this.transform.flipH };\n  }\n\n  public flipVertical() {\n    this.transform = { ...this.transform, flipV: !this.transform.flipV };\n  }\n\n  public resetImage() {\n    this.scale = 1;\n    this.rotation = 0;\n    this.canvasRotation = 0;\n    this.transform = { translateUnit: 'px' };\n  }\n\n  public zoomOut() {\n    this.scale -= 0.1;\n    this.transform = { ...this.transform, scale: this.scale };\n  }\n\n  public zoomIn() {\n    this.scale += 0.1;\n    this.transform = { ...this.transform, scale: this.scale };\n  }\n\n  public toggleContainWithinAspectRatio() {\n    this.containWithinAspectRatio = !this.containWithinAspectRatio;\n  }\n\n  private flipAfterRotate() {\n    this.transform = {\n      ...this.transform,\n      flipH: this.transform.flipV,\n      flipV: this.transform.flipH,\n    };\n\n    this.translateH = 0;\n    this.translateV = 0;\n  }\n}\n\nexport const APP_IMAGE_CROPPER_DEFAULT_VALUES = {\n  scale: 1,\n  imageURL: '',\n  height: '200px',\n  aspectRatio: 4 / 3,\n  background: 'black',\n  cropperMinWidth: 128,\n  buttonText: 'Select file',\n  rounded: false,\n  onlyScaleDown: true,\n  maintainAspectRatio: true,\n};\n",
            "styleUrl": "./app-image-cropper.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<label [for]=\"inputId\">{{ label }}</label>\n\n<article id=\"app-image-cropper\">\n  <input\n    type=\"file\"\n    [id]=\"inputId\"\n    accept=\"image/*\"\n    class=\"h-0 w-0 invisible\"\n    (change)=\"fileChangeEvent($event)\"\n  />\n\n  <section [class.disable-actions]=\"!(imageURL || imageChangedEvent)\">\n    <label [for]=\"inputId\">\n      <i class=\"iconify\" data-icon=\"uil:image-upload\"></i>\n    </label>\n\n    <hr />\n\n    <button (click)=\"rotateLeft()\">\n      <i\n        class=\"iconify\"\n        data-flip=\"horizontal\"\n        data-icon=\"tabler:rotate-rectangle\"\n      ></i>\n    </button>\n    <button (click)=\"flipHorizontal()\">\n      <i class=\"iconify\" data-icon=\"gg:edit-flip-h\"></i>\n    </button>\n    <button (click)=\"flipVertical()\">\n      <i class=\"iconify\" data-icon=\"gg:edit-flip-v\"></i>\n    </button>\n    <button (click)=\"zoomOut()\">\n      <i class=\"iconify\" data-icon=\"octicon:zoom-out-24\"></i>\n    </button>\n    <button (click)=\"zoomIn()\">\n      <i class=\"iconify\" data-icon=\"octicon:zoom-in-24\"></i>\n    </button>\n    <button (click)=\"toggleContainWithinAspectRatio()\">\n      <i class=\"iconify\" data-icon=\"fluent:table-image-20-regular\"></i>\n    </button>\n\n    <button (click)=\"resetImage()\">\n      <i class=\"iconify\" data-icon=\"system-uicons:reset\"></i>\n    </button>\n  </section>\n\n  <div>\n    <image-cropper\n      format=\"png\"\n      output=\"blob\"\n      [imageURL]=\"imageURL\"\n      [roundCropper]=\"rounded\"\n      [allowMoveImage]=\"true\"\n      [(transform)]=\"transform\"\n      [aspectRatio]=\"aspectRatio\"\n      [style.max-height]=\"height\"\n      [backgroundColor]=\"background\"\n      [onlyScaleDown]=\"onlyScaleDown\"\n      [canvasRotation]=\"canvasRotation\"\n      [cropperMinWidth]=\"cropperMinWidth\"\n      [imageChangedEvent]=\"imageChangedEvent\"\n      [maintainAspectRatio]=\"maintainAspectRatio\"\n      [style.display]=\"showCropper ? null : 'none'\"\n      [containWithinAspectRatio]=\"containWithinAspectRatio\"\n      (imageLoaded)=\"imageLoaded()\"\n      (cropperReady)=\"cropperReady()\"\n      (imageCropped)=\"imageCropped($event)\"\n      (loadImageFailed)=\"loadImageFailed()\"\n    ></image-cropper>\n\n    @if(!(imageURL || imageChangedEvent)) {\n    <label [for]=\"inputId\" [style.height]=\"height\">\n      {{ buttonText }}\n    </label>\n    } @if(loading) {\n    <div class=\"loader\">Loading...</div>\n    }\n  </div>\n</article>\n"
        },
        {
            "name": "AppInputComponent",
            "id": "component-AppInputComponent-6de5ea60ece5f09eb83639e5fe4ccbd130c47f8ac0306db1926079b518708e4ff292d875f8f820271d9ea418ffa3220f9a4df1c7f91d58ef9e854a43ef09a6ba",
            "file": "src/app/modules/@core/components/form/app-input/app-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppInputComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "InputType",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, forwardRef } from '@angular/core';\nimport {\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { InputType } from '../../../types/input.type';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-input',\n  imports: [MatInputModule, FormsModule, ReactiveFormsModule],\n  styleUrl: './app-input.component.scss',\n  templateUrl: './app-input.component.html',\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppInputComponent),\n    },\n  ],\n})\nexport class AppInputComponent extends ModelControl {\n  @Input() type: InputType = 'text';\n\n  ngOnInit() {\n    if (!this.isDynamic) this.initMonitoringChanges();\n  }\n}\n",
            "styleUrl": "./app-input.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<mat-form-field\n  id=\"app-input\"\n  mode=\"outline\"\n  [class]=\"className\"\n  [formGroup]=\"group\"\n  [appearance]=\"appearance\"\n>\n  <mat-label>{{ label }}</mat-label>\n  <input\n    matInput\n    [id]=\"id\"\n    [name]=\"name\"\n    [type]=\"type\"\n    [placeholder]=\"placeholder\"\n    [formControlName]=\"formControlName\"\n  />\n</mat-form-field>\n"
        },
        {
            "name": "AppRadioButtonComponent",
            "id": "component-AppRadioButtonComponent-d278c8ffe35d70d8781877fe104ce168d89fd5b6a858fff3a464102984a109da0ec0b904b15f6b4d6c2e06cf4f643321d08d7417be92b7fde7b4a1c394624c06",
            "file": "src/app/modules/@core/components/form/app-radio-button/app-radio-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppRadioButtonComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-radio-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-radio-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": true,
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 27,
                    "type": "IFormOption[]",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MatRadioModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, forwardRef } from '@angular/core';\nimport {\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { IFormOption } from '../../../interfaces/app-form.interface';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-radio-button',\n  styleUrl: './app-radio-button.component.scss',\n  templateUrl: './app-radio-button.component.html',\n  imports: [FormsModule, MatRadioModule, MatInputModule, ReactiveFormsModule],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppRadioButtonComponent),\n    },\n  ],\n})\nexport class AppRadioButtonComponent extends ModelControl {\n  @Input({ required: true }) items: IFormOption[] = [];\n\n  ngOnInit() {\n    if (!this.isDynamic) this.initMonitoringChanges();\n  }\n}\n",
            "styleUrl": "./app-radio-button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<article id=\"app-radio-button\" [class]=\"className\" [formGroup]=\"group\">\n  <mat-label id=\"example-radio-group-label-{{ name }}\">{{ label }}</mat-label>\n\n  <mat-radio-group [id]=\"id\" [name]=\"name\" [formControlName]=\"formControlName\">\n    @for (item of items; track item) {\n    <mat-radio-button [value]=\"item.value\">{{ item.label }}</mat-radio-button>\n    }\n  </mat-radio-group>\n</article>\n"
        },
        {
            "name": "AppSelectComponent",
            "id": "component-AppSelectComponent-e16b205faa55406a280869929165c1e15e9a6f2356fcec6740257ab8465b4011f2fc4fc3f9fa3229f59cd10047f94a4de9f9ac51ab7afe326336c77a86606f4e",
            "file": "src/app/modules/@core/components/form/app-select/app-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppSelectComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-select",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": true,
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 26,
                    "type": "IFormOption[]",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatSelectModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, forwardRef } from '@angular/core';\nimport {\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { IFormOption } from '../../../interfaces/app-form.interface';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-select',\n  styleUrl: './app-select.component.scss',\n  templateUrl: './app-select.component.html',\n  imports: [MatSelectModule, FormsModule, ReactiveFormsModule],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppSelectComponent),\n    },\n  ],\n})\nexport class AppSelectComponent extends ModelControl {\n  @Input({ required: true }) items: IFormOption[] = [];\n\n  ngOnInit() {\n    if (!this.isDynamic) this.initMonitoringChanges();\n  }\n}\n",
            "styleUrl": "./app-select.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<mat-form-field\n  id=\"app-select\"\n  [class]=\"className\"\n  [formGroup]=\"group\"\n  [appearance]=\"appearance\"\n>\n  <mat-label>{{ label }}</mat-label>\n  <mat-select\n    [id]=\"id\"\n    [placeholder]=\"placeholder\"\n    [formControlName]=\"formControlName\"\n  >\n    @for (item of items; track item) {\n    <mat-option [value]=\"item.value\">{{ item.label }}</mat-option>\n    }\n  </mat-select>\n</mat-form-field>\n"
        },
        {
            "name": "AppTextareaComponent",
            "id": "component-AppTextareaComponent-05e94c9c1f784b902ea89cdfb1122307890c4aa139ee60425055fd4ccf02a4315f48690dd9fc7d751dd460efcb40d0d7b91414bfda893fe68ab4ab2e43e956e3",
            "file": "src/app/modules/@core/components/form/app-textarea/app-textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppTextareaComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-textarea",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-textarea.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "rows",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, forwardRef } from '@angular/core';\nimport {\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-textarea',\n  styleUrl: './app-textarea.component.scss',\n  templateUrl: './app-textarea.component.html',\n  imports: [MatInputModule, FormsModule, ReactiveFormsModule],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppTextareaComponent),\n    },\n  ],\n})\nexport class AppTextareaComponent extends ModelControl {\n  @Input() rows: number = 3;\n\n  ngOnInit() {\n    if (!this.isDynamic) this.initMonitoringChanges();\n  }\n}\n",
            "styleUrl": "./app-textarea.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<mat-form-field\n  id=\"app-textarea\"\n  [class]=\"className\"\n  [formGroup]=\"group\"\n  [appearance]=\"appearance\"\n>\n  <mat-label>{{ label }}</mat-label>\n  <textarea\n    matInput\n    [id]=\"id\"\n    [name]=\"name\"\n    [rows]=\"rows\"\n    [placeholder]=\"placeholder\"\n    [formControlName]=\"formControlName\"\n  ></textarea>\n</mat-form-field>\n"
        },
        {
            "name": "AppTextEditorComponent",
            "id": "component-AppTextEditorComponent-9bd49f2a791503df935c0410ff31908d8903feab681b4536ea7115ec2a4a3381c78c6dac096699210969fdf32070cc88f2ba2f93a68483e9a54a210e1e25b956",
            "file": "src/app/modules/@core/components/form/app-text-editor/app-text-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppTextEditorComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-text-editor",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-text-editor.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{} as AngularEditorConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "AngularEditorConfig",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "configModel",
                    "defaultValue": "{\n    height: '100',\n    editable: true,\n    translate: 'yes',\n    toolbarPosition: 'bottom',\n    toolbarHiddenButtons: [\n      ['heading', 'insertUnorderedList', 'insertOrderedList'],\n      [\n        'unlink',\n        'htmlCode',\n        'insertImage',\n        'insertVideo',\n        'customClasses',\n        'backgroundColor',\n      ],\n    ],\n    ...this.config,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AngularEditorConfig",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "HttpClientModule",
                    "type": "module"
                },
                {
                    "name": "AngularEditorModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpClientModule } from '@angular/common/http';\nimport { Component, Input, forwardRef } from '@angular/core';\nimport {\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport {\n  AngularEditorConfig,\n  AngularEditorModule,\n} from '@kolkov/angular-editor';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-text-editor',\n  styleUrl: './app-text-editor.component.scss',\n  templateUrl: './app-text-editor.component.html',\n  imports: [\n    FormsModule,\n    HttpClientModule,\n    AngularEditorModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppTextEditorComponent),\n    },\n  ],\n})\nexport class AppTextEditorComponent extends ModelControl {\n  @Input() config: AngularEditorConfig = {} as AngularEditorConfig;\n\n  public configModel: AngularEditorConfig = {\n    height: '100',\n    editable: true,\n    translate: 'yes',\n    toolbarPosition: 'bottom',\n    toolbarHiddenButtons: [\n      ['heading', 'insertUnorderedList', 'insertOrderedList'],\n      [\n        'unlink',\n        'htmlCode',\n        'insertImage',\n        'insertVideo',\n        'customClasses',\n        'backgroundColor',\n      ],\n    ],\n    ...this.config,\n  };\n\n  ngOnInit() {\n    Object.assign(this.configModel, this.config);\n    if (!this.isDynamic) this.initMonitoringChanges();\n  }\n}\n",
            "styleUrl": "./app-text-editor.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<article id=\"app-text-editor\" [class]=\"className\" [formGroup]=\"group\">\n  @if (!!label) {\n  <label [for]=\"id\">{{ label }}</label>\n  }\n  <angular-editor\n    [id]=\"id\"\n    [config]=\"configModel\"\n    [formControlName]=\"formControlName\"\n  ></angular-editor>\n</article>\n"
        },
        {
            "name": "AppThemeSelectionComponent",
            "id": "component-AppThemeSelectionComponent-1d661dfcdf244c60fa753580430274307594e70df03a066633b21313ceaa91af1b4f91a04bbe190a5cc4e10e327f3f2eec2df769f91dfa857a920d2893b33dc5",
            "file": "src/app/modules/@core/components/app-theme-selection/app-theme-selection.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-theme-selection",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-theme-selection.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isDarkMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onToggleDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "AppCheckboxComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ThemeService } from '../../services/theme.service';\nimport { AppCheckboxComponent } from '../form/app-checkbox/app-checkbox.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-theme-selection',\n  imports: [FormsModule, AppCheckboxComponent],\n  styleUrl: './app-theme-selection.component.scss',\n  templateUrl: './app-theme-selection.component.html',\n})\nexport class AppThemeSelectionComponent {\n  public isDarkMode: boolean = false;\n\n  constructor(private themeService: ThemeService) {}\n\n  ngOnInit() {\n    this.isDarkMode = this.themeService.currentTheme === 'dark';\n  }\n\n  public onToggleDarkMode() {\n    this.themeService.setTheme(this.isDarkMode ? 'dark' : 'light');\n  }\n}\n",
            "styleUrl": "./app-theme-selection.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<app-checkbox\n  toggle\n  label=\"Dark Mode\"\n  name=\"theme-selection\"\n  [(ngModel)]=\"isDarkMode\"\n  [initialValue]=\"isDarkMode\"\n  (ngModelChange)=\"onToggleDarkMode()\"\n/>\n"
        },
        {
            "name": "ComponentsComponent",
            "id": "component-ComponentsComponent-01ae622be31497fa2908318cad80fff48025798986d2f66710e315a7375705095bc994aee4ddee67a7c4c6c7f75177b78813c987d6b7f4980436a28f3696d821",
            "file": "src/app/modules/initial/pages/components/components.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-components",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./components.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultOptions",
                    "defaultValue": "[\n    { label: 'Option 1', value: 1 },\n    { label: 'Option 2', value: 2 },\n    { label: 'Option 3', value: 3 },\n    { label: 'Option 4', value: 4 },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFormOption[]",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "fieldWidth",
                    "defaultValue": "'calc(50% - 12px)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "formExample",
                    "defaultValue": "this.formGeneratorService.init<IFormGeneratorExample>([\n    [\n      {\n        name: 'fileUpload',\n        type: 'file-upload',\n        label: 'File upload',\n        additional: { fileUpload: { maxFiles: 3 } },\n      },\n    ],\n    [\n      {\n        name: 'imageCropper',\n        type: 'image-cropper',\n        label: 'Image Cropper',\n      },\n      {\n        name: 'imageCropperOutro',\n        type: 'image-cropper',\n        label: 'Image Cropper 2',\n        additional: {\n          imageCropper: {\n            rounded: true,\n          },\n        },\n      },\n    ],\n    [\n      {\n        type: 'input',\n        name: 'password',\n        label: 'Password',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n        additional: { inputType: `password` },\n      },\n      {\n        name: 'email',\n        type: 'input',\n        label: 'email',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n        additional: { inputType: `email` },\n      },\n    ],\n    [\n      {\n        name: 'name',\n        label: 'Name',\n        type: 'input',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n      {\n        name: 'select',\n        type: 'select',\n        label: 'Select',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n    ],\n    [\n      {\n        name: 'age',\n        label: 'Age',\n        type: 'input',\n        width: this.fieldWidth,\n        additional: { inputType: `number` },\n      },\n      {\n        name: 'radio',\n        type: 'radio',\n        label: 'radio',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n    ],\n    [\n      {\n        name: 'birthDate',\n        type: 'datepicker',\n        label: 'Birth date',\n        width: this.fieldWidth,\n      },\n      {\n        name: 'rage',\n        label: 'Rage',\n        type: 'datepicker',\n        width: this.fieldWidth,\n        additional: { datepicker: { isDatepickerRange: true } },\n      },\n    ],\n    [{ type: 'textarea', name: 'description', label: 'Description' }],\n    [{ label: '', type: 'text-editor', name: 'text-editor' }],\n    [\n      {\n        name: 'isAdmin',\n        type: 'checkbox',\n        label: 'Is admin',\n        width: this.fieldWidth,\n        additional: { checkbox: { isToggle: true } },\n      },\n    ],\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "formValue",
                    "defaultValue": "{} as IFormGeneratorExample",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFormGeneratorExample",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "model",
                            "type": "IFormGeneratorExample",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "IFormGeneratorExample",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onValueChange",
                    "args": [
                        {
                            "name": "model",
                            "type": "IFormGeneratorExample",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "IFormGeneratorExample",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "MatTabsModule",
                    "type": "module"
                },
                {
                    "name": "AppCheckboxComponent",
                    "type": "component"
                },
                {
                    "name": "FormExampleComponent",
                    "type": "component"
                },
                {
                    "name": "TerminalWindowComponent",
                    "type": "component"
                },
                {
                    "name": "AppFormGeneratorComponent",
                    "type": "component"
                },
                {
                    "name": "AppThemeSelectionComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { RouterModule } from '@angular/router';\n\nimport { JsonPipe } from '@angular/common';\nimport { FormsModule, Validators } from '@angular/forms';\nimport { AppFormGeneratorComponent } from '../../../@core/_form-generator/app-form-generator/app-form-generator.component';\nimport { FormGeneratorService } from '../../../@core/_form-generator/form-generator.service';\nimport { IFormOption } from '../../../@core/interfaces/app-form.interface';\nimport { DatePickerRangeValue } from '../../../@core/types/datepicker.type';\nimport { FormExampleComponent } from '../../components/form-example/form-example.component';\nimport { TerminalWindowComponent } from '../../components/terminal-window/terminal-window.component';\n\nimport { AppThemeSelectionComponent } from '../../../@core/components/app-theme-selection/app-theme-selection.component';\nimport { AppCheckboxComponent } from '../../../@core/components/form/app-checkbox/app-checkbox.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-components',\n  styleUrl: './components.component.scss',\n  templateUrl: './components.component.html',\n  imports: [\n    JsonPipe,\n    FormsModule,\n    RouterModule,\n    MatTabsModule,\n    AppCheckboxComponent,\n    FormExampleComponent,\n    TerminalWindowComponent,\n    AppFormGeneratorComponent,\n    AppThemeSelectionComponent,\n  ],\n})\nexport class ComponentsComponent {\n  public defaultOptions: IFormOption[] = [\n    { label: 'Option 1', value: 1 },\n    { label: 'Option 2', value: 2 },\n    { label: 'Option 3', value: 3 },\n    { label: 'Option 4', value: 4 },\n  ];\n\n  private readonly fieldWidth: string = 'calc(50% - 12px)';\n  public formValue: IFormGeneratorExample = {} as IFormGeneratorExample;\n  public formExample = this.formGeneratorService.init<IFormGeneratorExample>([\n    [\n      {\n        name: 'fileUpload',\n        type: 'file-upload',\n        label: 'File upload',\n        additional: { fileUpload: { maxFiles: 3 } },\n      },\n    ],\n    [\n      {\n        name: 'imageCropper',\n        type: 'image-cropper',\n        label: 'Image Cropper',\n      },\n      {\n        name: 'imageCropperOutro',\n        type: 'image-cropper',\n        label: 'Image Cropper 2',\n        additional: {\n          imageCropper: {\n            rounded: true,\n          },\n        },\n      },\n    ],\n    [\n      {\n        type: 'input',\n        name: 'password',\n        label: 'Password',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n        additional: { inputType: `password` },\n      },\n      {\n        name: 'email',\n        type: 'input',\n        label: 'email',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n        additional: { inputType: `email` },\n      },\n    ],\n    [\n      {\n        name: 'name',\n        label: 'Name',\n        type: 'input',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n      {\n        name: 'select',\n        type: 'select',\n        label: 'Select',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n    ],\n    [\n      {\n        name: 'age',\n        label: 'Age',\n        type: 'input',\n        width: this.fieldWidth,\n        additional: { inputType: `number` },\n      },\n      {\n        name: 'radio',\n        type: 'radio',\n        label: 'radio',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n    ],\n    [\n      {\n        name: 'birthDate',\n        type: 'datepicker',\n        label: 'Birth date',\n        width: this.fieldWidth,\n      },\n      {\n        name: 'rage',\n        label: 'Rage',\n        type: 'datepicker',\n        width: this.fieldWidth,\n        additional: { datepicker: { isDatepickerRange: true } },\n      },\n    ],\n    [{ type: 'textarea', name: 'description', label: 'Description' }],\n    [{ label: '', type: 'text-editor', name: 'text-editor' }],\n    [\n      {\n        name: 'isAdmin',\n        type: 'checkbox',\n        label: 'Is admin',\n        width: this.fieldWidth,\n        additional: { checkbox: { isToggle: true } },\n      },\n    ],\n  ]);\n\n  constructor(private formGeneratorService: FormGeneratorService) {}\n\n  ngOnInit() {\n    this.formExample.setOptionsField('radio', this.defaultOptions);\n    this.formExample.setOptionsField('select', this.defaultOptions);\n\n    this.formExample.setInitialValue('name', 'Valor inicial');\n  }\n\n  public onSubmit(model: IFormGeneratorExample) {\n    alert(JSON.stringify(model));\n  }\n\n  public onValueChange(model: IFormGeneratorExample) {\n    this.formValue = model;\n  }\n}\n\ninterface IFormGeneratorExample {\n  age: number;\n  name: string;\n  email: string;\n  radio: number;\n  select: number;\n  isAdmin: boolean;\n  description: string;\n  birthDate: string | Date;\n  rage: DatePickerRangeValue;\n}\n",
            "styleUrl": "./components.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formGeneratorService",
                        "type": "FormGeneratorService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 146,
                "jsdoctags": [
                    {
                        "name": "formGeneratorService",
                        "type": "FormGeneratorService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section id=\"components\" class=\"app-container\">\n  <nav>\n    <a [routerLink]=\"['/']\">Voltar</a>\n    <h1>Components</h1>\n\n    <app-theme-selection />\n  </nav>\n\n  <mat-tab-group>\n    <mat-tab label=\"Form\">\n      <app-form-example />\n    </mat-tab>\n\n    <mat-tab label=\"Form Generator\">\n      <section class=\"form-generator-container\">\n        <app-form-generator\n          (onValueChanges)=\"onValueChange($event)\"\n          [fields]=\"formExample.fields\"\n          (onSubmit)=\"onSubmit($event)\"\n          actionPositionY=\"bottom\"\n          actionPositionX=\"left\"\n          mobileColumn\n          watchValues\n        />\n\n        <app-terminal-window [content]=\"formValue | json\" />\n      </section>\n    </mat-tab>\n  </mat-tab-group>\n</section>\n"
        },
        {
            "name": "FormExampleComponent",
            "id": "component-FormExampleComponent-15f14610fcc616ae2fd2ee4b20c0e441688c36cc6124e2e225889a80d330891a899b41b6c8e3a7d4d5dd9f5f32e8956195f9847fc143055a9af9869f70c33aae",
            "file": "src/app/modules/initial/components/form-example/form-example.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-example",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form-example.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultOptions",
                    "defaultValue": "[\n    { label: 'Option 1', value: 1 },\n    { label: 'Option 2', value: 2 },\n    { label: 'Option 3', value: 3 },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFormOption[]",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "form",
                    "defaultValue": "{\n    radio: 1,\n    select: 1,\n    input: 'Teste',\n    checkbox: true,\n    fileUpload: [],\n    imageCropper: null,\n    textarea: 'Textarea',\n    datepicker: new Date(),\n    datepickerRange: null,\n    textEditor: `<b>INITIAL</b>`,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AppFormComponents",
                    "type": "component"
                },
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "TerminalWindowComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AppFormComponents } from '../../../@core/components/form';\nimport { IFormOption } from '../../../@core/interfaces/app-form.interface';\nimport { TerminalWindowComponent } from '../terminal-window/terminal-window.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-form-example',\n  styleUrl: './form-example.component.scss',\n  templateUrl: './form-example.component.html',\n  imports: [\n    ...AppFormComponents,\n    JsonPipe,\n    FormsModule,\n    RouterModule,\n    TerminalWindowComponent,\n  ],\n})\nexport class FormExampleComponent {\n  public defaultOptions: IFormOption[] = [\n    { label: 'Option 1', value: 1 },\n    { label: 'Option 2', value: 2 },\n    { label: 'Option 3', value: 3 },\n  ];\n\n  public form = {\n    radio: 1,\n    select: 1,\n    input: 'Teste',\n    checkbox: true,\n    fileUpload: [],\n    imageCropper: null,\n    textarea: 'Textarea',\n    datepicker: new Date(),\n    datepickerRange: null,\n    textEditor: `<b>INITIAL</b>`,\n  };\n\n  public onSubmit() {\n    console.log('FORM', this.form);\n  }\n}\n",
            "styleUrl": "./form-example.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section id=\"form-example\">\n  <form>\n    <app-image-cropper\n      name=\"imageCropper\"\n      [(ngModel)]=\"form.imageCropper\"\n      [initialValue]=\"form.imageCropper\"\n    />\n\n    <app-file-upload\n      [maxFiles]=\"5\"\n      name=\"fileUpload\"\n      label=\"File upload\"\n      [fileTypes]=\"['image/*']\"\n      placeholder=\"Insert fles\"\n      [(ngModel)]=\"form.fileUpload\"\n      [initialValue]=\"form.fileUpload\"\n    />\n\n    <app-text-editor\n      name=\"textEditor\"\n      className=\"w-full\"\n      label=\"Text editor\"\n      [(ngModel)]=\"form.textEditor\"\n      [initialValue]=\"form.textEditor\"\n    />\n\n    <app-input\n      name=\"input\"\n      label=\"Input\"\n      className=\"w-full\"\n      [(ngModel)]=\"form.input\"\n      [initialValue]=\"form.input\"\n    />\n\n    <app-datepicker\n      name=\"datepicker\"\n      label=\"Datepicker\"\n      className=\"w-full\"\n      [(ngModel)]=\"form.datepicker\"\n      [initialValue]=\"form.datepicker\"\n    />\n\n    <app-datepicker\n      range\n      className=\"w-full\"\n      name=\"datepickerRange\"\n      label=\"Datepicker Range\"\n      [(ngModel)]=\"form.datepickerRange\"\n      [initialValue]=\"form.datepickerRange\"\n    />\n\n    <app-select\n      name=\"select\"\n      label=\"Select\"\n      className=\"w-full\"\n      [items]=\"defaultOptions\"\n      [(ngModel)]=\"form.select\"\n      [initialValue]=\"form.select\"\n    />\n\n    <app-textarea\n      name=\"textarea\"\n      label=\"Textarea\"\n      className=\"w-full\"\n      [(ngModel)]=\"form.textarea\"\n      [initialValue]=\"form.textarea\"\n    />\n\n    <app-radio-button\n      name=\"radio\"\n      label=\"Radio\"\n      [items]=\"defaultOptions\"\n      [(ngModel)]=\"form.radio\"\n      [initialValue]=\"form.radio\"\n    />\n\n    <app-checkbox\n      name=\"Checkbox\"\n      label=\"Checkbox\"\n      [(ngModel)]=\"form.checkbox\"\n      [initialValue]=\"form.checkbox\"\n    />\n\n    <button class=\"btn-primary my-4\" type=\"button\" (click)=\"onSubmit()\">\n      Submit\n    </button>\n  </form>\n\n  <app-terminal-window [content]=\"form | json\" />\n</section>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-4d4abb65edb9d3289ae782d8a76ea6f45fc29be1c8f5f65a68f87443427d571b58b775069ee1eb97efe179536ab1a64fa809b652e322801ce774401dd2a91b01",
            "file": "src/app/modules/initial/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "angularMaterial",
                    "defaultValue": "`ng add @angular/material`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "dependencies",
                    "defaultValue": "`npm i animate.css @iconify/iconify @kolkov/angular-editor`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "dependenciesDev",
                    "defaultValue": "`npm i autoprefixer postcss tailwindcss -D`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "dependenciesTextEditor",
                    "defaultValue": "`npm i @kolkov/angular-editor @fortawesome/free-solid-svg-icons @fortawesome/angular-fontawesome @fortawesome/fontawesome-svg-core`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "gitClone",
                    "defaultValue": "`git clone https://github.com/PedroSilvaG3FT/angular-boilerplate.git`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "TerminalWindowComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TerminalWindowComponent } from '../../components/terminal-window/terminal-window.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-home',\n  styleUrl: './home.component.scss',\n  templateUrl: './home.component.html',\n  imports: [CommonModule, RouterModule, TerminalWindowComponent],\n})\nexport class HomeComponent {\n  public angularMaterial: string = `ng add @angular/material`;\n  public dependencies: string = `npm i animate.css @iconify/iconify @kolkov/angular-editor`;\n  public dependenciesDev: string = `npm i autoprefixer postcss tailwindcss -D`;\n  public gitClone: string = `git clone https://github.com/PedroSilvaG3FT/angular-boilerplate.git`;\n\n  public dependenciesTextEditor: string = `npm i @kolkov/angular-editor @fortawesome/free-solid-svg-icons @fortawesome/angular-fontawesome @fortawesome/fontawesome-svg-core`;\n\n  constructor() {}\n}\n",
            "styleUrl": "./home.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "extends": [],
            "templateData": "<section id=\"home\">\n  <div class=\"app-container\">\n    <figure>\n      <img src=\"favicon.ico\" alt=\"ANGULAR\" />\n    </figure>\n\n    <h1>Angular boilerplate</h1>\n\n    <div>\n      <a class=\"btn-primary\" [routerLink]=\"['/components']\">Components</a>\n    </div>\n\n    <section>\n      <app-terminal-window\n        class=\"mb-6\"\n        [content]=\"gitClone\"\n        title=\"Clone project\"\n      />\n\n      <app-terminal-window\n        [content]=\"dependencies\"\n        title=\"Dependencies and libraries present in the project\"\n      />\n      <app-terminal-window [content]=\"dependenciesDev\" />\n      <app-terminal-window [content]=\"angularMaterial\" />\n    </section>\n  </div>\n</section>\n"
        },
        {
            "name": "ModelControl",
            "id": "component-ModelControl-f4f488f7e27bb4f8d967054a5b56762d26d73aacc8a34e3cb58e30a76a0c03473aa8a07ac007028342135798213d22205df485b18018dbde45c64246ee642c59",
            "file": "src/app/modules/@core/components/form/model-control.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "'outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": []
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": []
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AlertService } from '../../services/alert.service';\nimport { ModelControlType } from '../../types/model-control.type';\n\n@Component({ template: `` })\nexport class ModelControl implements ControlValueAccessor {\n  @Input() id: string = '';\n  @Input() name: string = '';\n  @Input() label: string = '';\n  @Input() className: string = '';\n  @Input() placeholder: string = '';\n  @Input() isDynamic: boolean = false;\n  @Input() formControlName: string = '';\n  @Input() initialValue?: ModelControlType;\n  @Input() appearance: 'outline' | 'fill' = 'outline';\n\n  @Input() group: FormGroup = this.formBuilder.group({\n    [this.name]: [''],\n  });\n\n  public model!: ModelControlType;\n  public $modelControl!: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public alertService: AlertService\n  ) {}\n\n  onTouched = () => {};\n  onChange = (_: ModelControlType) => {};\n\n  writeValue(value: ModelControlType): void {\n    this.model = value;\n  }\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  initMonitoringChanges() {\n    this.setInitialValue();\n\n    this.$modelControl = this.group.valueChanges.subscribe((value) => {\n      if (!this.formControlName) this.onChange(value['']);\n      else this.onChange(value);\n    });\n  }\n\n  setInitialValue() {\n    if (!!this.formControlName || this.initialValue === undefined) return;\n    this.group.setValue({ '': this.initialValue });\n  }\n\n  ngOnDestroy() {\n    this.$modelControl?.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ]
        },
        {
            "name": "PageNavComponent",
            "id": "component-PageNavComponent-3f2d69dfb40c7849076300d747af2c9853e892687f3fb389edc1bfb7fd2fdbedf4dabeb11bea5d64a5bf784f98f4a3366bd384c961a6fc7eaf9b2975c4fd9405",
            "file": "src/app/modules/initial/components/page-nav/page-nav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-nav",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./page-nav.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-page-nav',\n  standalone: true,\n  imports: [],\n  templateUrl: './page-nav.component.html',\n  styleUrl: './page-nav.component.scss'\n})\nexport class PageNavComponent {\n\n}\n",
            "styleUrl": "./page-nav.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>page-nav works!</p>\n"
        },
        {
            "name": "TerminalWindowComponent",
            "id": "component-TerminalWindowComponent-fecb555e956e451d5956eff3a3e2dab88365cfe540f2bc0883bb74f4082851ceb0ee2aabdb722c83351bdeb452fc419d1376356cdc80e3edcdc154afed0aea7f",
            "file": "src/app/modules/initial/components/terminal-window/terminal-window.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-terminal-window",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./terminal-window.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": true,
                    "name": "content",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "hidePrefix",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleCopyContent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "MatSnackBarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgIf } from '@angular/common';\nimport { Component, Input, booleanAttribute } from '@angular/core';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { ClipboardService } from '../../../@core/services/clipboard.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-terminal-window',\n  imports: [NgIf, MatSnackBarModule],\n  styleUrl: './terminal-window.component.scss',\n  templateUrl: './terminal-window.component.html',\n})\nexport class TerminalWindowComponent {\n  @Input() title: string = '';\n  @Input({ required: true }) content: string = '';\n  @Input({ transform: booleanAttribute }) hidePrefix: boolean = false;\n\n  constructor(private clipboardService: ClipboardService) {}\n\n  public handleCopyContent() {\n    this.clipboardService.copy(this.content, 'Content copied!');\n  }\n}\n",
            "styleUrl": "./terminal-window.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "clipboardService",
                        "type": "ClipboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "clipboardService",
                        "type": "ClipboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section id=\"terminal-window\">\n  <h5 *ngIf=\"!!title\">{{ title }}</h5>\n\n  <article>\n    <nav>\n      <span></span>\n      <span></span>\n      <span></span>\n\n      <a mat-stroked-button (click)=\"handleCopyContent()\">\n        <i class=\"iconify\" data-icon=\"bi:copy\"></i>\n        copy\n      </a>\n    </nav>\n\n    <section>\n      <p>\n        <span *ngIf=\"!hidePrefix\">~ %:</span>\n        {{ content }}\n      </p>\n    </section>\n  </article>\n</section>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "APP_FILE_UPLOAD_DEFAULT_VALUES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/components/form/app-file-upload/app-file-upload.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  maxFiles: 1,\n  fileTypes: ['*/*'],\n  limitErrorMessage: `File limit reached`,\n}"
            },
            {
                "name": "APP_IMAGE_CROPPER_DEFAULT_VALUES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/components/form/app-image-cropper/app-image-cropper.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  scale: 1,\n  imageURL: '',\n  height: '200px',\n  aspectRatio: 4 / 3,\n  background: 'black',\n  cropperMinWidth: 128,\n  buttonText: 'Select file',\n  rounded: false,\n  onlyScaleDown: true,\n  maintainAspectRatio: true,\n}"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideAnimationsAsync(),\n    provideRouter(routes, inMemoryScrollingFeature),\n    provideAnimations()\n],\n}"
            },
            {
                "name": "AppFormComponents",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/components/form/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  AppInputComponent,\n  AppSelectComponent,\n  AppTextareaComponent,\n  AppCheckboxComponent,\n  AppFormImageComponent,\n  AppDatepickerComponent,\n  AppTextEditorComponent,\n  AppFileUploadComponent,\n  AppRadioButtonComponent,\n  AppImageCropperComponent,\n]"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-checkbok.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppCheckboxComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: true,\n    name: 'checkbox-example',\n    label: 'Checkbox example',\n  },\n  argTypes: { initialValue: { control: { type: 'boolean' } } },\n  render: (args: AppCheckboxComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-datepicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppDatepickerComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: new Date(),\n    name: 'datepicker-example',\n    label: 'datepicker example',\n  },\n  render: (args: AppDatepickerComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-file-upload.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppFileUploadComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: [],\n    name: 'file-upload-example',\n    label: 'File Upload example',\n  },\n  render: (args: AppFileUploadComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-form-generator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppFormGeneratorComponent>",
                "defaultValue": "{\n  args: {\n    fields: [\n      [\n        {\n          type: 'input',\n          name: 'password',\n          initialValue: '',\n          label: 'Password',\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { inputType: `password` },\n        },\n        {\n          name: 'email',\n          type: 'input',\n          label: 'email',\n          initialValue: '',\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { inputType: `email` },\n        },\n      ],\n      [\n        {\n          width: fieldWidth,\n          name: 'name',\n          label: 'Name',\n          type: 'input',\n          initialValue: '',\n          validators: [Validators.required],\n        },\n        {\n          name: 'select',\n          type: 'select',\n          label: 'Select',\n          initialValue: 0,\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { options: storybookFormBase.initialOptions },\n        },\n      ],\n      [\n        {\n          name: 'age',\n          label: 'Age',\n          type: 'input',\n          initialValue: 0,\n          width: fieldWidth,\n          additional: { inputType: `number` },\n        },\n        {\n          name: 'radio',\n          type: 'radio',\n          label: 'radio',\n          initialValue: 0,\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { options: storybookFormBase.initialOptions },\n        },\n      ],\n      [\n        {\n          width: fieldWidth,\n          name: 'birthDate',\n          type: 'datepicker',\n          label: 'Birth date',\n          initialValue: new Date(),\n        },\n        {\n          name: 'rage',\n          label: 'Rage',\n          initialValue: '',\n          width: fieldWidth,\n          type: 'datepicker',\n          additional: { datepicker: { isDatepickerRange: true } },\n        },\n      ],\n      [\n        {\n          initialValue: '',\n          type: 'textarea',\n          name: 'description',\n          label: 'Description',\n        },\n      ],\n      [\n        {\n          name: 'isAdmin',\n          type: 'checkbox',\n          label: 'Is admin',\n          width: fieldWidth,\n          initialValue: false,\n          additional: { checkbox: { isToggle: true } },\n        },\n      ],\n    ],\n  },\n  render: (args: AppFormGeneratorComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-image-cropper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppImageCropperComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: [],\n    name: 'file-upload-example',\n    label: 'File Upload example',\n  },\n  render: (args: AppImageCropperComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppInputComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: '',\n    name: 'input-example',\n    label: 'input example',\n    placeholder: 'input example placeholder',\n  },\n  render: (args: AppInputComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppRadioButtonComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: 1,\n    name: 'radio-button-example',\n    label: 'Radio button example',\n    items: storybookFormBase.initialOptions,\n  },\n  argTypes: { initialValue: { control: { type: 'number' } } },\n  render: (args: AppRadioButtonComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppSelectComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: 1,\n    name: 'select-example',\n    label: 'Select example',\n    items: storybookFormBase.initialOptions,\n  },\n  argTypes: { initialValue: { control: { type: 'number' } } },\n  render: (args: AppSelectComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-text-editor.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppTextEditorComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: '',\n    name: 'text-editor-example',\n    label: 'Text editor example',\n  },\n  render: (args: AppTextEditorComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppTextareaComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: '',\n    name: 'textarea-example',\n    label: 'Textarea example',\n    placeholder: 'Textarea example placeholder',\n  },\n  render: (args: AppTextareaComponent) => ({ props: args }),\n}"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/_form-generator/field-generator.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  input: AppInputComponent,\n  select: AppSelectComponent,\n  radio: AppRadioButtonComponent,\n  textarea: AppTextareaComponent,\n  checkbox: AppCheckboxComponent,\n  datepicker: AppDatepickerComponent,\n  'text-editor': AppTextEditorComponent,\n  'file-upload': AppFileUploadComponent,\n  'image-cropper': AppImageCropperComponent,\n}"
            },
            {
                "name": "fieldWidth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-form-generator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'calc(50% - 12px)'"
            },
            {
                "name": "inMemoryScrollingFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "InMemoryScrollingFeature",
                "defaultValue": "withInMemoryScrolling({\n    scrollPositionRestoration: 'top',\n    anchorScrolling: 'enabled',\n  })"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-checkbok.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppCheckboxComponent>",
                "defaultValue": "{\n  component: AppCheckboxComponent,\n  tags: ['autodocs'],\n  title: 'Form/Checkbox',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([\n        'appearance',\n        'placeholder',\n      ]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-datepicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppDatepickerComponent>",
                "defaultValue": "{\n  component: AppDatepickerComponent,\n  tags: ['autodocs'],\n  title: 'Form/Datepicker',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['placeholder']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-file-upload.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppFileUploadComponent>",
                "defaultValue": "{\n  component: AppFileUploadComponent,\n  tags: ['autodocs'],\n  title: 'Form/File Upload',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['id', 'appearance']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-form-generator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppFormGeneratorComponent>",
                "defaultValue": "{\n  component: AppFormGeneratorComponent,\n  tags: ['autodocs'],\n  title: 'Form/Form Generator',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: [\n        'initForm',\n        'ngOnInit',\n        'formGroup',\n        'handleSubmit',\n        'defaultFieldWidth',\n        'dynamicColumClass',\n      ],\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [\n        NgStyle,\n        NgClass,\n        JsonPipe,\n        ReactiveFormsModule,\n        FieldGeneratorDirective,\n        ...storybookFormBase.commonImports,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-image-cropper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppImageCropperComponent>",
                "defaultValue": "{\n  component: AppImageCropperComponent,\n  tags: ['autodocs'],\n  title: 'Form/Image Cropper',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['id', 'appearance']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppInputComponent>",
                "defaultValue": "{\n  component: AppInputComponent,\n  tags: ['autodocs'],\n  title: 'Form/Input',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppRadioButtonComponent>",
                "defaultValue": "{\n  component: AppRadioButtonComponent,\n  tags: ['autodocs'],\n  title: 'Form/Radio Button',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([\n        'appearance',\n        'placeholder',\n      ]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppSelectComponent>",
                "defaultValue": "{\n  component: AppSelectComponent,\n  tags: ['autodocs'],\n  title: 'Form/Select',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['placeholder']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-text-editor.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppTextEditorComponent>",
                "defaultValue": "{\n  component: AppTextEditorComponent,\n  tags: ['autodocs'],\n  title: 'Form/Text Editor',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([\n        'name',\n        'appearance',\n        'placeholder',\n        'configModel',\n      ]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppTextareaComponent>",
                "defaultValue": "{\n  component: AppTextareaComponent,\n  tags: ['autodocs'],\n  title: 'Form/Textarea',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
            },
            {
                "name": "ROUTER_STACK_ANIMATION",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/animations/router-stack.animation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  transition('home => components', useAnimation(slideLeft)),\n  transition('components => home', useAnimation(slideRight)),\n]"
            },
            {
                "name": "slideLeft",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/animations/slide.animation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AnimationReferenceMetadata",
                "defaultValue": "animation([\n  style({ position: 'relative' }),\n  query(':enter, :leave', [\n    style({\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      width: '100%',\n    }),\n  ]),\n  query(':enter', [style({ right: '-100%', opacity: 0 })]),\n  query(':leave', animateChild()),\n  group([\n    query(':leave', [\n      animate('1s ease-out', style({ right: '100%', opacity: 0 })),\n    ]),\n    query(':enter', [\n      animate('1s ease-out', style({ right: '0%', opacity: 1 })),\n    ]),\n  ]),\n  query(':enter', animateChild()),\n])"
            },
            {
                "name": "slideRight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/animations/slide.animation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AnimationReferenceMetadata",
                "defaultValue": "animation([\n  style({ position: 'relative' }),\n  query(':enter, :leave', [\n    style({\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n    }),\n  ]),\n  query(':enter', [style({ left: '-100%', opacity: 0 })]),\n  query(':leave', animateChild()),\n  group([\n    query(':leave', [\n      animate('1s ease-out', style({ left: '100%', opacity: 0 })),\n    ]),\n    query(':enter', [\n      animate('1s ease-out', style({ left: '0%', opacity: 1 })),\n    ]),\n  ]),\n  query(':enter', animateChild()),\n])"
            },
            {
                "name": "STORAGE_THEME_STATE_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/constants/storage.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'@ui:theme'"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-checkbok.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-datepicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-file-upload.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-form-generator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-image-cropper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-text-editor.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "THEME_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/config/theme.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ThemeConfigType",
                "defaultValue": "{\n  light: {\n    bgPrimary: '#f6f6f6',\n    bgSecondary: '#fff',\n    textPrimary: '#313131',\n  },\n  dark: {\n    bgPrimary: '#111418',\n    bgSecondary: '#0f1924',\n    textPrimary: '#fff',\n  },\n}"
            },
            {
                "name": "transitionFade",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/animations/slide.animation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AnimationReferenceMetadata",
                "defaultValue": "animation([\n  style({ position: 'relative' }),\n  query(':enter, :leave', [\n    style({\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n    }),\n  ]),\n  query(':enter', [style({ bottom: '100%', opacity: 0 })]),\n  query(':leave', animateChild()),\n  group([\n    query(':leave', [\n      animate('1s ease-out', style({ bottom: '100%', opacity: 0 })),\n    ]),\n    query(':enter', [\n      animate('1s ease-out', style({ bottom: '0%', opacity: 1 })),\n    ]),\n  ]),\n  query(':enter', animateChild()),\n])"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "DatePickerRangeValue",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/modules/@core/types/datepicker.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "FileUploadType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"*/*\" | \"image/*\" | \"audio/*\" | \"video/*\" | \"application/pdf\" | \".pdf,.doc\" | \"image/png\" | \"image/jpeg\" | \"audio/mpeg\" | \"audio/wav\" | \"video/mp4\"",
                "file": "src/app/modules/@core/types/file-upload.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "FormGeneratorFieldType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/modules/@core/_form-generator/field-generator.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 198
            },
            {
                "name": "HandlerCallbackPropsType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/modules/@core/_form-generator/field-generator.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 200
            },
            {
                "name": "InputType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"text\" | \"email\" | \"password\" | \"number\"",
                "file": "src/app/modules/@core/types/input.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "ModelControlType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "DatePickerRangeValue | boolean | string | number | object | File[] | File | Date | null",
                "file": "src/app/modules/@core/types/model-control.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "ThemeConfigType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Record<ThemeType | IThemeConfig>",
                "file": "src/app/modules/@core/types/theme.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "ThemeType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"light\" | \"dark\"",
                "file": "src/app/modules/@core/types/theme.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/modules/@core/components/form/app-file-upload/app-file-upload.component.ts": [
                {
                    "name": "APP_FILE_UPLOAD_DEFAULT_VALUES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/components/form/app-file-upload/app-file-upload.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  maxFiles: 1,\n  fileTypes: ['*/*'],\n  limitErrorMessage: `File limit reached`,\n}"
                }
            ],
            "src/app/modules/@core/components/form/app-image-cropper/app-image-cropper.component.ts": [
                {
                    "name": "APP_IMAGE_CROPPER_DEFAULT_VALUES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/components/form/app-image-cropper/app-image-cropper.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  scale: 1,\n  imageURL: '',\n  height: '200px',\n  aspectRatio: 4 / 3,\n  background: 'black',\n  cropperMinWidth: 128,\n  buttonText: 'Select file',\n  rounded: false,\n  onlyScaleDown: true,\n  maintainAspectRatio: true,\n}"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideAnimationsAsync(),\n    provideRouter(routes, inMemoryScrollingFeature),\n    provideAnimations()\n],\n}"
                },
                {
                    "name": "inMemoryScrollingFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InMemoryScrollingFeature",
                    "defaultValue": "withInMemoryScrolling({\n    scrollPositionRestoration: 'top',\n    anchorScrolling: 'enabled',\n  })"
                }
            ],
            "src/app/modules/@core/components/form/index.ts": [
                {
                    "name": "AppFormComponents",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/components/form/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  AppInputComponent,\n  AppSelectComponent,\n  AppTextareaComponent,\n  AppCheckboxComponent,\n  AppFormImageComponent,\n  AppDatepickerComponent,\n  AppTextEditorComponent,\n  AppFileUploadComponent,\n  AppRadioButtonComponent,\n  AppImageCropperComponent,\n]"
                }
            ],
            "src/stories/form/app-checkbok.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-checkbok.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppCheckboxComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: true,\n    name: 'checkbox-example',\n    label: 'Checkbox example',\n  },\n  argTypes: { initialValue: { control: { type: 'boolean' } } },\n  render: (args: AppCheckboxComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-checkbok.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppCheckboxComponent>",
                    "defaultValue": "{\n  component: AppCheckboxComponent,\n  tags: ['autodocs'],\n  title: 'Form/Checkbox',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([\n        'appearance',\n        'placeholder',\n      ]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-checkbok.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-datepicker.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-datepicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppDatepickerComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: new Date(),\n    name: 'datepicker-example',\n    label: 'datepicker example',\n  },\n  render: (args: AppDatepickerComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-datepicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppDatepickerComponent>",
                    "defaultValue": "{\n  component: AppDatepickerComponent,\n  tags: ['autodocs'],\n  title: 'Form/Datepicker',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['placeholder']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-datepicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-file-upload.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-file-upload.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppFileUploadComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: [],\n    name: 'file-upload-example',\n    label: 'File Upload example',\n  },\n  render: (args: AppFileUploadComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-file-upload.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppFileUploadComponent>",
                    "defaultValue": "{\n  component: AppFileUploadComponent,\n  tags: ['autodocs'],\n  title: 'Form/File Upload',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['id', 'appearance']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-file-upload.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-form-generator.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-form-generator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppFormGeneratorComponent>",
                    "defaultValue": "{\n  args: {\n    fields: [\n      [\n        {\n          type: 'input',\n          name: 'password',\n          initialValue: '',\n          label: 'Password',\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { inputType: `password` },\n        },\n        {\n          name: 'email',\n          type: 'input',\n          label: 'email',\n          initialValue: '',\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { inputType: `email` },\n        },\n      ],\n      [\n        {\n          width: fieldWidth,\n          name: 'name',\n          label: 'Name',\n          type: 'input',\n          initialValue: '',\n          validators: [Validators.required],\n        },\n        {\n          name: 'select',\n          type: 'select',\n          label: 'Select',\n          initialValue: 0,\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { options: storybookFormBase.initialOptions },\n        },\n      ],\n      [\n        {\n          name: 'age',\n          label: 'Age',\n          type: 'input',\n          initialValue: 0,\n          width: fieldWidth,\n          additional: { inputType: `number` },\n        },\n        {\n          name: 'radio',\n          type: 'radio',\n          label: 'radio',\n          initialValue: 0,\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { options: storybookFormBase.initialOptions },\n        },\n      ],\n      [\n        {\n          width: fieldWidth,\n          name: 'birthDate',\n          type: 'datepicker',\n          label: 'Birth date',\n          initialValue: new Date(),\n        },\n        {\n          name: 'rage',\n          label: 'Rage',\n          initialValue: '',\n          width: fieldWidth,\n          type: 'datepicker',\n          additional: { datepicker: { isDatepickerRange: true } },\n        },\n      ],\n      [\n        {\n          initialValue: '',\n          type: 'textarea',\n          name: 'description',\n          label: 'Description',\n        },\n      ],\n      [\n        {\n          name: 'isAdmin',\n          type: 'checkbox',\n          label: 'Is admin',\n          width: fieldWidth,\n          initialValue: false,\n          additional: { checkbox: { isToggle: true } },\n        },\n      ],\n    ],\n  },\n  render: (args: AppFormGeneratorComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "fieldWidth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-form-generator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'calc(50% - 12px)'"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-form-generator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppFormGeneratorComponent>",
                    "defaultValue": "{\n  component: AppFormGeneratorComponent,\n  tags: ['autodocs'],\n  title: 'Form/Form Generator',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: [\n        'initForm',\n        'ngOnInit',\n        'formGroup',\n        'handleSubmit',\n        'defaultFieldWidth',\n        'dynamicColumClass',\n      ],\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [\n        NgStyle,\n        NgClass,\n        JsonPipe,\n        ReactiveFormsModule,\n        FieldGeneratorDirective,\n        ...storybookFormBase.commonImports,\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-form-generator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-image-cropper.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-image-cropper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppImageCropperComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: [],\n    name: 'file-upload-example',\n    label: 'File Upload example',\n  },\n  render: (args: AppImageCropperComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-image-cropper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppImageCropperComponent>",
                    "defaultValue": "{\n  component: AppImageCropperComponent,\n  tags: ['autodocs'],\n  title: 'Form/Image Cropper',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['id', 'appearance']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-image-cropper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-input.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppInputComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: '',\n    name: 'input-example',\n    label: 'input example',\n    placeholder: 'input example placeholder',\n  },\n  render: (args: AppInputComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppInputComponent>",
                    "defaultValue": "{\n  component: AppInputComponent,\n  tags: ['autodocs'],\n  title: 'Form/Input',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-radio-button.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppRadioButtonComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: 1,\n    name: 'radio-button-example',\n    label: 'Radio button example',\n    items: storybookFormBase.initialOptions,\n  },\n  argTypes: { initialValue: { control: { type: 'number' } } },\n  render: (args: AppRadioButtonComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppRadioButtonComponent>",
                    "defaultValue": "{\n  component: AppRadioButtonComponent,\n  tags: ['autodocs'],\n  title: 'Form/Radio Button',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([\n        'appearance',\n        'placeholder',\n      ]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-select.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppSelectComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: 1,\n    name: 'select-example',\n    label: 'Select example',\n    items: storybookFormBase.initialOptions,\n  },\n  argTypes: { initialValue: { control: { type: 'number' } } },\n  render: (args: AppSelectComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppSelectComponent>",
                    "defaultValue": "{\n  component: AppSelectComponent,\n  tags: ['autodocs'],\n  title: 'Form/Select',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['placeholder']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-text-editor.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-text-editor.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppTextEditorComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: '',\n    name: 'text-editor-example',\n    label: 'Text editor example',\n  },\n  render: (args: AppTextEditorComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-text-editor.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppTextEditorComponent>",
                    "defaultValue": "{\n  component: AppTextEditorComponent,\n  tags: ['autodocs'],\n  title: 'Form/Text Editor',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([\n        'name',\n        'appearance',\n        'placeholder',\n        'configModel',\n      ]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-text-editor.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-textarea.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppTextareaComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: '',\n    name: 'textarea-example',\n    label: 'Textarea example',\n    placeholder: 'Textarea example placeholder',\n  },\n  render: (args: AppTextareaComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppTextareaComponent>",
                    "defaultValue": "{\n  component: AppTextareaComponent,\n  tags: ['autodocs'],\n  title: 'Form/Textarea',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/app/modules/@core/_form-generator/field-generator.directive.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/_form-generator/field-generator.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  input: AppInputComponent,\n  select: AppSelectComponent,\n  radio: AppRadioButtonComponent,\n  textarea: AppTextareaComponent,\n  checkbox: AppCheckboxComponent,\n  datepicker: AppDatepickerComponent,\n  'text-editor': AppTextEditorComponent,\n  'file-upload': AppFileUploadComponent,\n  'image-cropper': AppImageCropperComponent,\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ],
            "src/app/modules/@core/animations/router-stack.animation.ts": [
                {
                    "name": "ROUTER_STACK_ANIMATION",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/animations/router-stack.animation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  transition('home => components', useAnimation(slideLeft)),\n  transition('components => home', useAnimation(slideRight)),\n]"
                }
            ],
            "src/app/modules/@core/animations/slide.animation.ts": [
                {
                    "name": "slideLeft",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/animations/slide.animation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AnimationReferenceMetadata",
                    "defaultValue": "animation([\n  style({ position: 'relative' }),\n  query(':enter, :leave', [\n    style({\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      width: '100%',\n    }),\n  ]),\n  query(':enter', [style({ right: '-100%', opacity: 0 })]),\n  query(':leave', animateChild()),\n  group([\n    query(':leave', [\n      animate('1s ease-out', style({ right: '100%', opacity: 0 })),\n    ]),\n    query(':enter', [\n      animate('1s ease-out', style({ right: '0%', opacity: 1 })),\n    ]),\n  ]),\n  query(':enter', animateChild()),\n])"
                },
                {
                    "name": "slideRight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/animations/slide.animation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AnimationReferenceMetadata",
                    "defaultValue": "animation([\n  style({ position: 'relative' }),\n  query(':enter, :leave', [\n    style({\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n    }),\n  ]),\n  query(':enter', [style({ left: '-100%', opacity: 0 })]),\n  query(':leave', animateChild()),\n  group([\n    query(':leave', [\n      animate('1s ease-out', style({ left: '100%', opacity: 0 })),\n    ]),\n    query(':enter', [\n      animate('1s ease-out', style({ left: '0%', opacity: 1 })),\n    ]),\n  ]),\n  query(':enter', animateChild()),\n])"
                },
                {
                    "name": "transitionFade",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/animations/slide.animation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AnimationReferenceMetadata",
                    "defaultValue": "animation([\n  style({ position: 'relative' }),\n  query(':enter, :leave', [\n    style({\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n    }),\n  ]),\n  query(':enter', [style({ bottom: '100%', opacity: 0 })]),\n  query(':leave', animateChild()),\n  group([\n    query(':leave', [\n      animate('1s ease-out', style({ bottom: '100%', opacity: 0 })),\n    ]),\n    query(':enter', [\n      animate('1s ease-out', style({ bottom: '0%', opacity: 1 })),\n    ]),\n  ]),\n  query(':enter', animateChild()),\n])"
                }
            ],
            "src/app/modules/@core/constants/storage.constant.ts": [
                {
                    "name": "STORAGE_THEME_STATE_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/constants/storage.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'@ui:theme'"
                }
            ],
            "src/app/modules/@core/config/theme.config.ts": [
                {
                    "name": "THEME_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/config/theme.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeConfigType",
                    "defaultValue": "{\n  light: {\n    bgPrimary: '#f6f6f6',\n    bgSecondary: '#fff',\n    textPrimary: '#313131',\n  },\n  dark: {\n    bgPrimary: '#111418',\n    bgSecondary: '#0f1924',\n    textPrimary: '#fff',\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/modules/@core/types/datepicker.type.ts": [
                {
                    "name": "DatePickerRangeValue",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/modules/@core/types/datepicker.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/modules/@core/types/file-upload.type.ts": [
                {
                    "name": "FileUploadType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"*/*\" | \"image/*\" | \"audio/*\" | \"video/*\" | \"application/pdf\" | \".pdf,.doc\" | \"image/png\" | \"image/jpeg\" | \"audio/mpeg\" | \"audio/wav\" | \"video/mp4\"",
                    "file": "src/app/modules/@core/types/file-upload.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/app/modules/@core/_form-generator/field-generator.directive.ts": [
                {
                    "name": "FormGeneratorFieldType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/modules/@core/_form-generator/field-generator.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 198
                },
                {
                    "name": "HandlerCallbackPropsType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/modules/@core/_form-generator/field-generator.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 200
                }
            ],
            "src/app/modules/@core/types/input.type.ts": [
                {
                    "name": "InputType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"text\" | \"email\" | \"password\" | \"number\"",
                    "file": "src/app/modules/@core/types/input.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/app/modules/@core/types/model-control.type.ts": [
                {
                    "name": "ModelControlType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "DatePickerRangeValue | boolean | string | number | object | File[] | File | Date | null",
                    "file": "src/app/modules/@core/types/model-control.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/app/modules/@core/types/theme.type.ts": [
                {
                    "name": "ThemeConfigType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Record<ThemeType | IThemeConfig>",
                    "file": "src/app/modules/@core/types/theme.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "ThemeType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"light\" | \"dark\"",
                    "file": "src/app/modules/@core/types/theme.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "inMemoryScrollingFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICheckboxAdditional",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDatePickerAdditional",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFileUploadAdditional",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFormGeneratorConfig",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFormGeneratorField",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFormGeneratorFieldAdditional",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFormGeneratorFields",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IImageCropperAdditional",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITextEditorAdditional",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/_form-generator/app-form-generator/app-form-generator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppFormGeneratorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/_form-generator/field-generator.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FieldGeneratorDirective",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/_form-generator/field-generator.directive.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/_form-generator/form-generator.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FormGeneratorService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/animations/router-stack.animation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ROUTER_STACK_ANIMATION",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/animations/slide.animation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "slideLeft",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/animations/slide.animation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "slideRight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/animations/slide.animation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "transitionFade",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/app-theme-selection/app-theme-selection.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppThemeSelectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-checkbox/app-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-datepicker/app-datepicker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppDatepickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-file-upload/app-file-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppFileUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/36",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-file-upload/app-file-upload.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "APP_FILE_UPLOAD_DEFAULT_VALUES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-form-image/app-form-image.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppFormImageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-image-cropper/app-image-cropper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppImageCropperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/57",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-image-cropper/app-image-cropper.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "APP_IMAGE_CROPPER_DEFAULT_VALUES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-input/app-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-radio-button/app-radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppRadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-select/app-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-text-editor/app-text-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppTextEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-textarea/app-textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppTextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AppFormComponents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/model-control.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModelControl",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/config/theme.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "THEME_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/constants/storage.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STORAGE_THEME_STATE_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/directives/animation.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AnimateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/interfaces/app-form.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFormOption",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/interfaces/theme.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IThemeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/services/alert.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AlertService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/services/clipboard.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ClipboardService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/services/seo.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SEOService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/services/theme.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/initial/components/form-example/form-example.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/initial/components/page-nav/page-nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/initial/components/terminal-window/terminal-window.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TerminalWindowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/initial/pages/components/components.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComponentsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/initial/pages/components/components.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFormGeneratorExample",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/initial/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/_base.form.ts",
                "type": "class",
                "linktype": "classe",
                "name": "StorybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-checkbok.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-checkbok.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-checkbok.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-datepicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-datepicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-datepicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-file-upload.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-file-upload.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-file-upload.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-form-generator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-form-generator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fieldWidth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-form-generator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-form-generator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-image-cropper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-image-cropper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-image-cropper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-text-editor.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-text-editor.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-text-editor.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}